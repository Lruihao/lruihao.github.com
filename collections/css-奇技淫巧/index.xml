<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>CSS 奇技淫巧 - 合集 | 菠菜眾長</title><link>https://lruihao.cn/collections/css-%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</link><description>CSS 奇技淫巧 - 合集 | 菠菜眾長</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1024@lruihao.cn (Lruihao)</managingEditor><webMaster>1024@lruihao.cn (Lruihao)</webMaster><copyright>本站内容采用 CC BY-NC-SA 4.0 国际许可协议。</copyright><lastBuildDate>Sun, 14 Jul 2024 13:03:31 +0800</lastBuildDate><atom:link href="https://lruihao.cn/collections/css-%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/" rel="self" type="application/rss+xml"/><item><title>CSS 实现时间轴、背景图 loading 和渐变边框</title><link>https://lruihao.cn/posts/fixit-docs-bookmark/</link><pubDate>Sun, 14 Jul 2024 13:03:31 +0800</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/fixit-docs-bookmark/</guid><description><![CDATA[<div class="featured-image"><img loading="eager" src="https://lruihao.cn/posts/fixit-docs-bookmark/images/featured-image.webp" alt="CSS 实现时间轴、背景图 loading 和渐变边框" title="本文将通过一个实际应用场景，展示如何使用现代 CSS 实现时间轴、背景图 loading 效果、渐变边框等效果。" referrerpolicy="no-referrer"/></div><p>本文将通过一个实际应用场景，展示如何使用现代 CSS 实现时间轴、背景图 loading 效果、渐变边框等效果。</p>
<h2 id="背景" class="heading-element"><span>1 背景</span>
  <a href="#%e8%83%8c%e6%99%af" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg>
  </a>
</h2><p>最近在调整 FixIt 主题的官方文档，调整过程中总觉得首页空荡荡的少了些内容，然后就在脑海里构思了如本文封面图所示的效果，希望引导用户阅读文档。</p>
<p>需求分析：</p>
<ol>
<li>整体布局：左右两栏，左侧为主题文档大纲，右侧为网站预览图</li>
<li>左侧需要显示时间轴，时间轴带有跑马灯动画效果（暗指文档阅读顺序）</li>
<li>右侧加载网站预览图时，需要有 loading 效果</li>
<li>整体边框需要渐变效果</li>
</ol>
<p>第一点很简单，一个 <code>flex</code> 布局就能搞定了，这里不再展开。</p>
<p>接下来我们重点看看如何实现时间轴、背景图 loading 效果和渐变边框。</p>
<h2 id="时间轴" class="heading-element"><span>2 时间轴</span>
  <a href="#%e6%97%b6%e9%97%b4%e8%bd%b4" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg>
  </a>
</h2><p>先睹为快，效果如下：</p>
<p><figure><a class="lightgallery" href="images/demo-outline.gif?size=large" data-thumbnail="images/demo-outline.gif?size=small" data-sub-html="<h2>时间轴动画</h2><p>从上到下依次点亮时间轴</p>"><img loading="lazy" src="images/demo-outline.gif" alt="时间轴动画" srcset="images/demo-outline.gif?size=small, images/demo-outline.gif?size=medium 1.5x, images/demo-outline.gif?size=large 2x" data-title="从上到下依次点亮时间轴" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></a><figcaption class="image-caption">时间轴动画</figcaption>
  </figure></p>
<p>我不希望时间轴的实现和其他 UI 框架一样拥有复杂的 DOM 结构，所以使用最简单的 <code>ul</code> 和 <code>li</code> 即可，关键代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">ul</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;docs-outline&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ $page1.Permalink }}&#34;</span><span class="p">&gt;</span>{{ $page1.LinkTitle }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ $page2.Permalink }}&#34;</span><span class="p">&gt;</span>{{ $page2.LinkTitle }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ $page3.Permalink }}&#34;</span><span class="p">&gt;</span>{{ $page3.LinkTitle }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;{{ $page4.Permalink }}&#34;</span><span class="p">&gt;</span>{{ $page4.LinkTitle }}<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span></span></span></code></pre></td></tr></table>
</div>
</div><p>DOM 结构就这么简单，重点在于 CSS 的实现，实现思路如下：</p>
<ul>
<li>先把 <code>ul</code> 设置 <code>list-style: none</code>，去掉默认的 <code>li</code> 样式</li>
<li>利用 <code>::before</code> 和 <code>::after</code> 伪元素实现时间轴的小圆点和连接线</li>
<li>动画效果：四个小圆点默认和连接线一样灰色，然后依次点亮，可以使用 <code>animation-delay</code> 属性实现</li>
</ul>
<p>动画效果关键帧代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scss" data-lang="scss"><span class="line"><span class="cl"><span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="na">border</span><span class="o">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">timeline-width</span><span class="p">)</span> <span class="ni">solid</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">timeline-color</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="na">animation-name</span><span class="o">:</span> <span class="n">border-color-fade</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">animation-duration</span><span class="o">:</span> <span class="mi">2</span><span class="kt">s</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">animation-iteration-count</span><span class="o">:</span> <span class="ni">infinite</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">animation-delay</span><span class="o">:</span> <span class="nf">calc</span><span class="p">(</span><span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">timeline-index</span><span class="p">)</span> <span class="o">*</span> <span class="mi">0</span><span class="mf">.3</span><span class="kt">s</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">@keyframes</span> <span class="nt">border-color-fade</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">0</span><span class="err">%</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="na">border-color</span><span class="o">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">timeline-color</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nt">50</span><span class="err">%</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="na">border-color</span><span class="o">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">timeline-circle-color</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nt">100</span><span class="err">%</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="na">border-color</span><span class="o">:</span> <span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">timeline-color</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div><p>通过 <code>nth-child</code> 选择器来设置 <code>--timeline-index</code> 来线性增加每个小圆点的动画延迟时间，从而在视觉上出现依次点亮的效果。</p>
<p>如果使用 SCSS 可以简化代码，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scss" data-lang="scss"><span class="line"><span class="cl"><span class="k">@for</span> <span class="nv">$i</span> <span class="ow">from</span> <span class="mi">1</span> <span class="ow">through</span> <span class="mi">4</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">li</span><span class="nd">:nth-child</span><span class="o">(</span><span class="si">#{</span><span class="nv">$i</span><span class="si">}</span><span class="o">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="na">--timeline-index</span><span class="o">:</span> <span class="si">#{</span><span class="nv">$i</span><span class="si">}</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">&amp;</span><span class="nd">::before</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="na">content</span><span class="o">:</span> <span class="s1">&#39;</span><span class="si">#{</span><span class="nv">$i</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div><p>如果需要在小圆点的内部显示序号，可以像设置 <code>--timeline-index</code> 一样依次设置 <code>content</code>。</p>
<p>然后在小圆点点亮动画过程中同时转变 <code>color: transparent</code> 到具体的颜色即可。</p>
<h2 id="背景图-loading-效果" class="heading-element"><span>3 背景图 loading 效果</span>
  <a href="#%e8%83%8c%e6%99%af%e5%9b%be-loading-%e6%95%88%e6%9e%9c" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg>
  </a>
</h2><p><figure><a class="lightgallery" href="images/demo-loading.gif?size=large" data-thumbnail="images/demo-loading.gif?size=small" data-sub-html="<h2>背景图 loading 效果</h2><p>先加载 loading 图再加重预览图</p>"><img loading="lazy" src="images/demo-loading.gif" alt="背景图 loading 效果" srcset="images/demo-loading.gif?size=small, images/demo-loading.gif?size=medium 1.5x, images/demo-loading.gif?size=large 2x" data-title="先加载 loading 图再加重预览图" style="background: url(/images/loading.min.svg) no-repeat center;" onload="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}this.dataset.lazyloaded='';" onerror="this.title=this.dataset.title;for(const i of ['style', 'data-title','onerror','onload']){this.removeAttribute(i);}"/></a><figcaption class="image-caption">背景图 loading 效果</figcaption>
  </figure></p>
<p>如果只是想实现图片的 loading 效果其实很简单，之前在「<a href="/posts/native-img-loading-lazy/">浏览器 IMG 图片原生懒加载 Loading=&ldquo;lazy&rdquo;</a>」中有介绍过，但是这次我是把图片当作背景图片使用的，那问题来了，不通过 JS 背景图片的 loading 效果怎么实现呢？</p>
<p>还是可以利用 <code>::before</code> 和 <code>::after</code> 伪元素，一个伪元素用来显示 loading 图，另一个伪元素用来显示背景图片。</p>
<p>原理：利用两张图片加载的时间差，由于 loading 图片很小，所以加载很快，而背景图片加载较慢，然后默认不设置 <code>z-index</code> 的情况下，后面的元素会在上层，所以在背景图片加载完成前，loading 图片会一直显示。</p>
<p>关键代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scss" data-lang="scss"><span class="line"><span class="cl"><span class="nc">.docs-preview</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="na">&amp;</span><span class="o">::</span><span class="n">before</span><span class="o">,</span>
</span></span><span class="line"><span class="cl">  <span class="o">&amp;::</span><span class="n">after</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="na">content</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">position</span><span class="o">:</span> <span class="ni">absolute</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">top</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">left</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">width</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">height</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">background-position</span><span class="o">:</span> <span class="ni">center</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">background-repeat</span><span class="o">:</span> <span class="ni">no-repeat</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">&amp;</span><span class="nd">::before</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="na">background-color</span><span class="o">:</span> <span class="nf">rgba</span><span class="p">(</span><span class="mi">204</span><span class="o">,</span> <span class="mi">204</span><span class="o">,</span> <span class="mi">204</span><span class="o">,</span> <span class="mi">0</span><span class="mf">.1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="na">background-image</span><span class="o">:</span> <span class="sx">url(/images/loading.min.svg)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">background-size</span><span class="o">:</span> <span class="mi">60</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="o">[</span><span class="nt">data-theme</span><span class="o">=</span><span class="s1">&#39;dark&#39;</span><span class="o">]</span> <span class="k">&amp;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="na">background-color</span><span class="o">:</span> <span class="nf">rgba</span><span class="p">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="mf">.1</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">&amp;</span><span class="nd">::after</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="na">background-image</span><span class="o">:</span> <span class="sx">url(/images/apple-devices-preview.webp)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="na">background-size</span><span class="o">:</span> <span class="mi">130</span><span class="kt">%</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="全尺寸带圆角渐变边框" class="heading-element"><span>4 全尺寸带圆角渐变边框</span>
  <a href="#%e5%85%a8%e5%b0%ba%e5%af%b8%e5%b8%a6%e5%9c%86%e8%a7%92%e6%b8%90%e5%8f%98%e8%be%b9%e6%a1%86" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg>
  </a>
</h2><p>最后实现一个全尺寸带圆角渐变边框效果，一句话概括为利用线性渐变 <code>linear-gradient</code> 分别设置 <code>padding-box</code> 和 <code>border-box</code> 的背景，然后 <code>border</code> 颜色设置为透明即可实现。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scss" data-lang="scss"><span class="line"><span class="cl"><span class="nc">.docs-navigation</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="na">border-radius</span><span class="o">:</span> <span class="mi">2</span><span class="mf">.5</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">background</span><span class="o">:</span> <span class="nf">linear-gradient</span><span class="p">(</span><span class="mh">#fff</span><span class="o">,</span> <span class="mh">#fff</span><span class="p">)</span> <span class="ni">padding-box</span><span class="o">,</span> <span class="nf">linear-gradient</span><span class="p">(</span><span class="mi">45</span><span class="kt">deg</span><span class="o">,</span> <span class="mh">#42d392</span><span class="o">,</span> <span class="mh">#FF7359</span><span class="p">)</span> <span class="ni">border-box</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">border</span><span class="o">:</span> <span class="mi">0</span><span class="mf">.25</span><span class="kt">rem</span> <span class="ni">solid</span> <span class="ni">transparent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div><p>值得一提的是，这里面利用到的一个核心概念是 <code>background-clip</code> 属性，详见 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-clip"target="_blank" rel="external nofollow noopener noreferrer">background-clip - CSS: Cascading Style Sheets | MDN<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>：</p>
<ul>
<li><code>padding-box</code> 表示背景延伸到内边距边界</li>
<li><code>border-box</code> 表示背景延伸到边框边界。</li>
</ul>
<p>另外，如果想实现渐变边框的动画效果，用 SCSS 可以这样做（虽然我不认为这是一个好的做法）：</p>
<div class="highlight" data-open="false"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-scss" data-lang="scss"><span class="line"><span class="cl"><span class="nc">.docs-navigation</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="na">border-radius</span><span class="o">:</span> <span class="mi">2</span><span class="mf">.5</span><span class="kt">px</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">background</span><span class="o">:</span> <span class="nf">linear-gradient</span><span class="p">(</span><span class="mh">#fff</span><span class="o">,</span> <span class="mh">#fff</span><span class="p">)</span> <span class="ni">padding-box</span><span class="o">,</span> <span class="nf">linear-gradient</span><span class="p">(</span><span class="nf">var</span><span class="p">(</span><span class="o">--</span><span class="n">gradient-angle</span><span class="p">)</span><span class="o">,</span> <span class="mh">#42d392</span><span class="o">,</span> <span class="mh">#FF7359</span><span class="p">)</span> <span class="ni">border-box</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">border</span><span class="o">:</span> <span class="mi">0</span><span class="mf">.25</span><span class="kt">rem</span> <span class="ni">solid</span> <span class="ni">transparent</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">transition</span><span class="o">:</span> <span class="n">background-color</span> <span class="mi">0</span><span class="mf">.5</span><span class="kt">s</span><span class="o">,</span> <span class="n">border-color</span> <span class="mi">0</span><span class="mf">.5</span><span class="kt">s</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">--gradient-angle</span><span class="o">:</span> <span class="mi">45</span><span class="kt">deg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="na">animation</span><span class="o">:</span> <span class="n">gradient-angle-change</span> <span class="mi">10</span><span class="kt">s</span> <span class="ni">infinite</span> <span class="ni">linear</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// 分的越细，动画效果越平滑
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">@keyframes</span> <span class="nt">gradient-angle-change</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">@for</span> <span class="nv">$i</span> <span class="ow">from</span> <span class="mi">0</span> <span class="ow">through</span> <span class="mi">100</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="si">#{</span><span class="nv">$i</span> <span class="o">*</span> <span class="mi">1</span><span class="kt">%</span><span class="si">}</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="na">--gradient-angle</span><span class="o">:</span> <span class="si">#{</span><span class="mi">45</span> <span class="o">+</span> <span class="nv">$i</span> <span class="o">*</span> <span class="mi">4</span><span class="si">}</span><span class="n">deg</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="最后的效果" class="heading-element"><span>5 最后的效果</span>
  <a href="#%e6%9c%80%e5%90%8e%e7%9a%84%e6%95%88%e6%9e%9c" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg>
  </a>
</h2><p>为了方便使用 FixIt 主题的用户在自己的笔记内插入 FixIt 官方文档的书签，我把这个效果封装成了一个独立的组件，你可以在 <a href="https://github.com/hugo-fixit/shortcode-docs-bookmark"target="_blank" rel="external nofollow noopener noreferrer">hugo-fixit/shortcode-docs-bookmark<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> 中找到完整代码及食用方法。</p>
<div class="fixit-docs-navigation"><ul class="fixit-docs-outline"><li><a href="https://fixit.lruihao.cn/zh-cn/documentation/installation/" title="只需几个步骤即可为你的 Hugo 站点安装 FixIt 主题。">安装篇</a></li><li><a href="https://fixit.lruihao.cn/zh-cn/documentation/getting-started/" title="安装和使用 FixIt 主题的快速入门和指南。">入门篇</a></li><li><a href="https://fixit.lruihao.cn/zh-cn/documentation/content-management/" title="了解如何在 FixIt 主题中快速，直观地创建和组织内容。">内容管理</a></li><li><a href="https://fixit.lruihao.cn/zh-cn/documentation/advanced/" title="探索 Hugo - FixIt 主题的的进阶使用。">进阶篇</a></li></ul><div class="fixit-docs-preview"></div></div>
<h2 id="总结" class="heading-element"><span>6 总结</span>
  <a href="#%e6%80%bb%e7%bb%93" class="heading-mark">
    <svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"></path></svg>
  </a>
</h2><p>很多时候都感觉写 CSS 就像在写诗，相同的效果 CSS 实现往往会比 JS 更加优雅。</p>]]></description></item></channel></rss>