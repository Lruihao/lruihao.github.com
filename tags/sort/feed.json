{"version":"https://jsonfeed.org/version/1.1","title":"sort - 标签 | 菠菜眾長","description":"Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。","home_page_url":"https://lruihao.cn/","language":"zh-CN","icon":"https://lruihao.cn/apple-touch-icon.png","favicon":"https://lruihao.cn/favicon.ico","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://lruihao.cn/images/avatar.jpg"}],"items":[{"title":"java 常用类","date_published":"2019-04-14T10:12:44Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/stringbuffer/","url":"https://lruihao.cn/posts/stringbuffer/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["StringBuffer","sort","Java"],"summary":"1 StringBuffer/StringBuilder（掌握） 1.1 StringBuffer 是线程安全的可变字符串 StringBuilder 是线程不安全的可变字符串。 和 StringBuffer 的功能一样。就是效率高一些，但是不安全。 1.2 构造方法 StringBuffer sb = new StringBuffer(); StringBuffer sb = new StringBuffer(50); StringBuffer sb = new StringBuffer(\u0026ldquo;hello\u0026rdquo;); 1.3 成员方法：（自己补齐方法和意思） 添加功能 public StringBuffer append(String str): 追加字符串 public StringBuffer insert(int offset,String str): 在指定位置插入字符串 删除功能 public","content_html":"1 StringBuffer/StringBuilder（掌握） 1.1 StringBuffer 是线程安全的可变字符串 StringBuilder 是线程不安全的可变字符串。 和 StringBuffer 的功能一样。就是效率高一些，但是不安全。 1.2 构造方法 StringBuffer sb = new StringBuffer(); StringBuffer sb = new StringBuffer(50); StringBuffer sb = new StringBuffer(\u0026ldquo;hello\u0026rdquo;); 1.3 成员方法：（自己补齐方法和意思） 添加功能 public StringBuffer append(String str): 追加字符串 public StringBuffer insert(int offset,String str): 在指定位置插入字符串 删除功能 public"},{"title":"sort 排序","date_published":"2018-06-14T20:23:03Z","date_modified":"2018-06-14T20:23:03Z","id":"https://lruihao.cn/posts/c-sort/","url":"https://lruihao.cn/posts/c-sort/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["C++","sort","STL","ACM"],"summary":"sort 使用#include\u0026lt;algorithm\u0026gt;头文件， sort（开始地址，结束地址，排序方式），其中第三参数可以没有，则默认为升序排序。 或者简单的用 less\u0026lt;参数类型\u0026gt;()表示升序 greater\u0026lt;参数类型\u0026gt;()表示降序 也可以用一个 bool 型函数，比如： 1 2 3 4 5 bool cmp(int a,int b){ return","content_html":"sort 使用#include\u0026lt;algorithm\u0026gt;头文件， sort（开始地址，结束地址，排序方式），其中第三参数可以没有，则默认为升序排序。 或者简单的用 less\u0026lt;参数类型\u0026gt;()表示升序 greater\u0026lt;参数类型\u0026gt;()表示降序 也可以用一个 bool 型函数，比如： 1 2 3 4 5 bool cmp(int a,int b){ return"}]}