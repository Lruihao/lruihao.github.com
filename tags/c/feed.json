{"version":"https://jsonfeed.org/version/1.1","title":"C 标签 | 菠菜眾長","description":"Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。","home_page_url":"https://lruihao.cn/","feed_url":"https://lruihao.cn/tags/c/feed.json","language":"zh-CN","icon":"https://lruihao.cn/apple-touch-icon.png","favicon":"https://lruihao.cn/favicon.ico","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://lruihao.cn/images/avatar.jpg"}],"items":[{"title":"判断三角形的黑盒测试","date_published":"2019-05-26T18:50:53Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/judgetriangle/","url":"https://lruihao.cn/posts/judgetriangle/","tags":["黑盒测试","C"],"summary":" 黑盒测试着重测试软件功能，它并不涉及程序的内部结构和内容特性，主要根据规格说明，只依靠被测试程序的输入和输出之间关系或程序的功能来设计测试用例。\n白盒测试则清楚程序内部的结构以及是如何运作的，因此白盒测试需要对系统内部的结构和工作原理有一个清楚的了解。\n","content_html":" 黑盒测试着重测试软件功能，它并不涉及程序的内部结构和内容特性，主要根据规格说明，只依靠被测试程序的输入和输出之间关系或程序的功能来设计测试用例。\n白盒测试则清楚程序内部的结构以及是如何运作的，因此白盒测试需要对系统内部的结构和工作原理有一个清楚的了解。\n"},{"title":"最大公约数（二进制算法）","date_published":"2019-05-17T09:14:16Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/gcd-bit/","url":"https://lruihao.cn/posts/gcd-bit/","tags":["欧几里得","数学","数论","C"],"summary":" 二进制最大公约数算法避免了欧几里得算法（辗转相除法）的大量取模操作，有效减少了时间消耗，且更为方便。\n","content_html":" 二进制最大公约数算法避免了欧几里得算法（辗转相除法）的大量取模操作，有效减少了时间消耗，且更为方便。\n"},{"title":"大数乘法","date_published":"2019-03-28T22:50:43Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/dacheng/","url":"https://lruihao.cn/posts/dacheng/","tags":["数学","大数运算","ACM","C"],"summary":" 大数乘法 c 版 (基础写法)\n","content_html":" 大数乘法 c 版 (基础写法)\n"},{"title":"linux 编程初体验","date_published":"2018-10-15T21:19:27Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/linux-hello-c/","url":"https://lruihao.cn/posts/linux-hello-c/","tags":["linux","C"],"summary":"在 Linux 上编译 c 语言文件。 0.1 打开 vim 编辑器 （没有就用 vi, 或者先安装 vimsudo apt-get install vim) 1 vim 0.2 编辑文件 打开文件编辑器之后编辑文件 首先按Esc再:进入末行命令 再保存为 hello.c 文件后退出 1 2 : w hello.c : q 打开目录看看生成的文件 1 ls 0.3 编译生成可执行文件并执行 1 2 gcc hello.c -o hello ./hello 若权限不够则加可执行权限chmod +x hello","content_html":"在 Linux 上编译 c 语言文件。 0.1 打开 vim 编辑器 （没有就用 vi, 或者先安装 vimsudo apt-get install vim) 1 vim 0.2 编辑文件 打开文件编辑器之后编辑文件 首先按Esc再:进入末行命令 再保存为 hello.c 文件后退出 1 2 : w hello.c : q 打开目录看看生成的文件 1 ls 0.3 编译生成可执行文件并执行 1 2 gcc hello.c -o hello ./hello 若权限不够则加可执行权限chmod +x hello"},{"title":"“高逼格”C 语言画心","date_published":"2018-08-15T16:33:12Z","date_modified":"2018-08-15T16:33:12Z","id":"https://lruihao.cn/posts/heart/","url":"https://lruihao.cn/posts/heart/","tags":["C"],"summary":"七夕又快到了，分享一个曾经玩过的代码，用 C 语言画一个跳动的心，很有逼格有木有。\n截图 ","content_html":"七夕又快到了，分享一个曾经玩过的代码，用 C 语言画一个跳动的心，很有逼格有木有。\n截图 "},{"title":"Dreamoon and Stairs","date_published":"2018-08-10T20:13:08Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/codeforces476a/","url":"https://lruihao.cn/posts/codeforces476a/","tags":["Codeforces","ACM","数学","C++","C"],"summary":"题目链接 Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. What is the minimal number of moves making him climb to the top of the stairs that satisfies his condition? 1 Input The single line contains two space separated integers n, m (0 \u0026lt; n ≤ 10000, 1 \u0026lt; m ≤ 10). 2 Output Print a single integer — the minimal number of moves being a multiple of m. If there is no way he can climb satisfying condition print - 1 instead. 3 Examples 3.1 input1 10 2 3.2 output1 6 3.3 input2 3 5 3.4 output2 -1 3.5 Note For the first sample, Dreamoon could climb in 6 moves with following sequence of steps: {2, 2, 2, 2, 1, 1}.","content_html":"题目链接 Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. What is the minimal number of moves making him climb to the top of the stairs that satisfies his condition? 1 Input The single line contains two space separated integers n, m (0 \u0026lt; n ≤ 10000, 1 \u0026lt; m ≤ 10). 2 Output Print a single integer — the minimal number of moves being a multiple of m. If there is no way he can climb satisfying condition print - 1 instead. 3 Examples 3.1 input1 10 2 3.2 output1 6 3.3 input2 3 5 3.4 output2 -1 3.5 Note For the first sample, Dreamoon could climb in 6 moves with following sequence of steps: {2, 2, 2, 2, 1, 1}."},{"title":"Dreamoon and WiFi（组合数学）","date_published":"2018-08-10T17:44:47Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/codeforces476b/","url":"https://lruihao.cn/posts/codeforces476b/","tags":["组合数学","Codeforces","ACM","数学","C++","C"],"summary":"题目链接 1 题目大意 就是给定两个字符串，第一个字符串由\u0026quot;+\u0026quot;,\u0026quot;-\u0026ldquo;组成，第二个字符串由\u0026rdquo;+\u0026quot;,\u0026quot;-\u0026quot;,\u0026quot;?\u0026ldquo;组成，“+”代表加 1，\u0026rdquo;-\u0026ldquo;代表减一，“?\u0026ldquo;代表可","content_html":"题目链接 1 题目大意 就是给定两个字符串，第一个字符串由\u0026quot;+\u0026quot;,\u0026quot;-\u0026ldquo;组成，第二个字符串由\u0026rdquo;+\u0026quot;,\u0026quot;-\u0026quot;,\u0026quot;?\u0026ldquo;组成，“+”代表加 1，\u0026rdquo;-\u0026ldquo;代表减一，“?\u0026ldquo;代表可"},{"title":"The equation-SGU106（扩展欧几里得）","date_published":"2018-08-10T10:32:39Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/euclid/","url":"https://lruihao.cn/posts/euclid/","tags":["数学","数论","ACM","欧几里得","他山之石","C++","C"],"summary":"1 题意 给出 a,b,c,x1,x2,y1,y2，求满足 ax+by+c=0，且 x∈[x1,x2],y∈[y1,y2] 的整数解个数。 2 分析 对于解二元一次不定方程，容易想到利用扩展欧几里得求出一组可行解后找到通解，下面来介绍一下欧几里得以及扩展欧几里得。 2.1 欧几里得 又名辗转相除法，是用来计算两个数的最大公约数","content_html":"1 题意 给出 a,b,c,x1,x2,y1,y2，求满足 ax+by+c=0，且 x∈[x1,x2],y∈[y1,y2] 的整数解个数。 2 分析 对于解二元一次不定方程，容易想到利用扩展欧几里得求出一组可行解后找到通解，下面来介绍一下欧几里得以及扩展欧几里得。 2.1 欧几里得 又名辗转相除法，是用来计算两个数的最大公约数"},{"title":"Leading and Trailing-lightoj1282（快速幂 + 对数运算）","date_published":"2018-08-09T20:55:26Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/lightoj1282/","url":"https://lruihao.cn/posts/lightoj1282/","tags":["数论","数学","快速幂","ACM","C"],"summary":"1 题目链接 2 题目大意 给定两个数 n,k 求 n^k 的前三位和最后三位。\n3 分析 求后三位的话：直接快速幂，对 1000 取模就好了。\n求前三位，对于给定的一个数 n, 它可以写成 n=10^a, 其中这个 a 为浮点数，则t=n^k=(10^a)^k=10^a*k=(10^x)*(10^y);其中 x,y 分别是a*k的整数部分和小数部分，对于 t=n^k 这个数，它的位数由 (10^x) 决定，它的位数上的值则有 (10^y) 决定，因此我们要求 t 的前三位，只需要将 10^y 求出，在乘以 100，就得到了它的前三位。\n分析完，我们再整体看，设 n^k=10^z; 那么z=k*log10(n)\nfmod(z,1)可以求出 x 的小数部分。\n","content_html":"1 题目链接 2 题目大意 给定两个数 n,k 求 n^k 的前三位和最后三位。\n3 分析 求后三位的话：直接快速幂，对 1000 取模就好了。\n求前三位，对于给定的一个数 n, 它可以写成 n=10^a, 其中这个 a 为浮点数，则t=n^k=(10^a)^k=10^a*k=(10^x)*(10^y);其中 x,y 分别是a*k的整数部分和小数部分，对于 t=n^k 这个数，它的位数由 (10^x) 决定，它的位数上的值则有 (10^y) 决定，因此我们要求 t 的前三位，只需要将 10^y 求出，在乘以 100，就得到了它的前三位。\n分析完，我们再整体看，设 n^k=10^z; 那么z=k*log10(n)\nfmod(z,1)可以求出 x 的小数部分。\n"},{"title":"欧拉函数","date_published":"2018-08-08T17:10:07Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/euler/","url":"https://lruihao.cn/posts/euler/","tags":["数学","数论","euler","C"],"summary":"1 欧拉函数是求小于 x 并且和 x互质 的数的个数 通式：φ(x)=x(1-1/p1)(1-1/p2)(1-1/p3)(1-1/p4)…..(1-1/pn)\n其中 p1, p2……pn 为 x 的所有质因数，x 是不为 0 的整数\nφ(1)=1（唯一和 1 互质的数就是 1 本身）【注意：每种质因数只一个。比如 12=223】\n2 定理 若 n 是素数 p 的 k 次幂，φ(n)=p^k-p^(k-1)=(p-1)p^(k-1)，因为除了 p 的倍数外，其他数都跟 n 互质 欧拉函数是积性函数——若 m,n 互质，φ(mn)=φ(m)φ(n) 3 特殊性质 当 n 为奇数时，φ(2n)=φ(n) p 是素数，φ(p) = p - 1，φ(p) 称为 p 的欧拉值 若 a 为素数，b mod a=0,φ(a*b)=φ(b)*a ","content_html":"1 欧拉函数是求小于 x 并且和 x互质 的数的个数 通式：φ(x)=x(1-1/p1)(1-1/p2)(1-1/p3)(1-1/p4)…..(1-1/pn)\n其中 p1, p2……pn 为 x 的所有质因数，x 是不为 0 的整数\nφ(1)=1（唯一和 1 互质的数就是 1 本身）【注意：每种质因数只一个。比如 12=223】\n2 定理 若 n 是素数 p 的 k 次幂，φ(n)=p^k-p^(k-1)=(p-1)p^(k-1)，因为除了 p 的倍数外，其他数都跟 n 互质 欧拉函数是积性函数——若 m,n 互质，φ(mn)=φ(m)φ(n) 3 特殊性质 当 n 为奇数时，φ(2n)=φ(n) p 是素数，φ(p) = p - 1，φ(p) 称为 p 的欧拉值 若 a 为素数，b mod a=0,φ(a*b)=φ(b)*a "},{"title":"Til the Cows Come Home-poj2387(dijkstra 判断重边）","date_published":"2018-08-03T21:40:33Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/poj2387/","url":"https://lruihao.cn/posts/poj2387/","tags":["ACM","最短路","C++","C"],"summary":"题目链接 题目大意： 说的是，一只奶牛位于 N 号节点，输入 N 个节点和 T 对双向的边，求出由 N 到 1 的最短的距离，其实就是问的单源最短路问题。 两个点可能有多条路，选择最短的。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; #include\u0026lt;algorithm\u0026gt; using namespace std; const int INF=99999999; //设为无穷","content_html":"题目链接 题目大意： 说的是，一只奶牛位于 N 号节点，输入 N 个节点和 T 对双向的边，求出由 N 到 1 的最短的距离，其实就是问的单源最短路问题。 两个点可能有多条路，选择最短的。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; #include\u0026lt;algorithm\u0026gt; using namespace std; const int INF=99999999; //设为无穷"},{"title":"食物链-poj1182（带权并查集经典模板）","date_published":"2018-08-02T11:10:37Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/poj1182/","url":"https://lruihao.cn/posts/poj1182/","tags":["ACM","并查集","POJ","C++","C"],"summary":"题目链接\n思路参考 1,思路参考 2（没看懂）\n","content_html":"题目链接\n思路参考 1,思路参考 2（没看懂）\n"},{"title":"小希的迷宫-HDU-1272（并查集 or 树性质）","date_published":"2018-08-01T21:45:50Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/hdu1272/","url":"https://lruihao.cn/posts/hdu1272/","tags":["ACM","并查集","HDU","C++","C"],"summary":"1 题目链接：小希的迷宫 2 并查集 无回路 单连通 并查集做，首先想到的是判断两个点是否连通，不连通就合并，已连通的话说明会形成回路，则可以判定 No，交了一发错了。\n想了一下没有考虑到多个连通域的情况，该题必须只有一个连通域\n3 树的性质 既然单连通无回路，则这肯定是一棵树；那么 edge=v-1;\n","content_html":"1 题目链接：小希的迷宫 2 并查集 无回路 单连通 并查集做，首先想到的是判断两个点是否连通，不连通就合并，已连通的话说明会形成回路，则可以判定 No，交了一发错了。\n想了一下没有考虑到多个连通域的情况，该题必须只有一个连通域\n3 树的性质 既然单连通无回路，则这肯定是一棵树；那么 edge=v-1;\n"},{"title":"The-suspects-POJ-1611（并查集）","date_published":"2018-07-31T11:11:31Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/poj-1611/","url":"https://lruihao.cn/posts/poj-1611/","tags":["并查集","POJ","ACM","C","C++"],"summary":"1 题目链接：The-suspects 2 翻译 警察抓贩毒集团。有不同类型的犯罪集团，人员可能重复，集团内的人会相互接触。现在警察在其中一人（0 号）身上搜出毒品，认为与这个人直接接触或通过其他人有间接接触的人都是嫌疑犯。问包括 0 号犯人共有多少嫌疑犯？\n","content_html":"1 题目链接：The-suspects 2 翻译 警察抓贩毒集团。有不同类型的犯罪集团，人员可能重复，集团内的人会相互接触。现在警察在其中一人（0 号）身上搜出毒品，认为与这个人直接接触或通过其他人有间接接触的人都是嫌疑犯。问包括 0 号犯人共有多少嫌疑犯？\n"},{"title":"wireless network-POJ-2236（并查集）","date_published":"2018-07-31T11:10:54Z","date_modified":"2024-07-07T14:04:22&#43;08:00","id":"https://lruihao.cn/posts/poj-2236/","url":"https://lruihao.cn/posts/poj-2236/","tags":["并查集","ACM","POJ","C++","C"],"summary":"1 题目链接：wireless network 2 翻译 ","content_html":"1 题目链接：wireless network 2 翻译 "},{"title":"畅通工程-HDU-1232（并查集经典模板）","date_published":"2018-07-31T11:08:43Z","date_modified":"2018-07-31T11:08:43Z","id":"https://lruihao.cn/posts/%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B/","url":"https://lruihao.cn/posts/%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B/","tags":["ACM","并查集","HDU","C++","C"],"summary":"1 并查集入门推荐：超有爱的并查集~ 2 题目链接：畅通工程 3 题意分析 首先在地图上给你若干个城镇，这些城镇都可以看作点，然后告诉你哪些对城镇之间是有道路直接相连的。最后要解决的是整幅图的连通性问题。比如随意给你两个点，让你判断它们是否连通，或者问你整幅图一共有几个连通分支，也就是被分成了几个互相独立的块。像畅通工程这题，问还需要修几条路，实质就是求有几个连通分支。\n","content_html":"1 并查集入门推荐：超有爱的并查集~ 2 题目链接：畅通工程 3 题意分析 首先在地图上给你若干个城镇，这些城镇都可以看作点，然后告诉你哪些对城镇之间是有道路直接相连的。最后要解决的是整幅图的连通性问题。比如随意给你两个点，让你判断它们是否连通，或者问你整幅图一共有几个连通分支，也就是被分成了几个互相独立的块。像畅通工程这题，问还需要修几条路，实质就是求有几个连通分支。\n"},{"title":"牛客练习赛 23","date_published":"2018-07-27T21:56:08Z","date_modified":"2018-07-27T21:56:08Z","id":"https://lruihao.cn/posts/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B23/","url":"https://lruihao.cn/posts/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B23/","tags":["Nowcoder","ACM","C++","C"],"summary":"两题水过，暴力，找规律。\n1 托米的赌球 2 托米的划分 ","content_html":"两题水过，暴力，找规律。\n1 托米的赌球 2 托米的划分 "},{"title":"poj-2251-Dungeon Master（三维 bfs 最短路）","date_published":"2018-07-22T12:02:32Z","date_modified":"2018-07-22T12:02:32Z","id":"https://lruihao.cn/posts/poj-2251/","url":"https://lruihao.cn/posts/poj-2251/","tags":["BFS","ACM","搜索","POJ","C++","C"],"summary":"英文原题链接 1 Description - 题目描述 你被困在一个三维的空间中，现在要寻找最短路径逃生！ 空间由立方体单位构成 你每次向上下前后左右移动一个单位需要一分钟 你不能对角线移动并且四周封闭 是否存在逃出生天的可能性？如果存在，则需要多少时间？ 2 Input - 输入 输入第一行是一个数表示空间的数量。 每个空间的描述的第一行为 L，R 和 C（皆","content_html":"英文原题链接 1 Description - 题目描述 你被困在一个三维的空间中，现在要寻找最短路径逃生！ 空间由立方体单位构成 你每次向上下前后左右移动一个单位需要一分钟 你不能对角线移动并且四周封闭 是否存在逃出生天的可能性？如果存在，则需要多少时间？ 2 Input - 输入 输入第一行是一个数表示空间的数量。 每个空间的描述的第一行为 L，R 和 C（皆"},{"title":"poj-3984-迷宫问题 (bfs 路径）","date_published":"2018-07-22T11:50:20Z","date_modified":"2018-07-22T11:50:20Z","id":"https://lruihao.cn/posts/poj-3984/","url":"https://lruihao.cn/posts/poj-3984/","tags":["BFS","ACM","POJ","C++","C"],"summary":"迷宫问题 Time Limit: 1000MS Memory Limit: 65536K Total Submissions: 32323 Accepted: 18471 1 Description 定义一个二维数组： int maze[5][5] = { 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, }; 它表示一个迷宫，其中的 1 表示墙壁，0 表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。 2 Input 一个 5 × 5 的二维数组，表示一个迷宫。数据保证有唯一解。 3 Output","content_html":"迷宫问题 Time Limit: 1000MS Memory Limit: 65536K Total Submissions: 32323 Accepted: 18471 1 Description 定义一个二维数组： int maze[5][5] = { 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, }; 它表示一个迷宫，其中的 1 表示墙壁，0 表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。 2 Input 一个 5 × 5 的二维数组，表示一个迷宫。数据保证有唯一解。 3 Output"},{"title":"Wannafly 挑战赛 20-染色","date_published":"2018-07-22T11:46:25Z","date_modified":"2018-07-22T11:46:25Z","id":"https://lruihao.cn/posts/wannafly-20/","url":"https://lruihao.cn/posts/wannafly-20/","tags":["ACM","Nowcoder","C++","C"],"summary":"链接：https://www.nowcoder.com/acm/contest/133/A 来源：牛客网 1 题目描述 现在有一棵被 Samsara-Karma 染了 k 种颜色的树，每种颜色有着不同的价值，Applese 觉得 Samsara-Karma 染的太难看了，于是打算把整棵树重新染成同一种颜色，但是，由于一些奥妙重重的原因，每一次染色 Applese 可以选择两个有边相连","content_html":"链接：https://www.nowcoder.com/acm/contest/133/A 来源：牛客网 1 题目描述 现在有一棵被 Samsara-Karma 染了 k 种颜色的树，每种颜色有着不同的价值，Applese 觉得 Samsara-Karma 染的太难看了，于是打算把整棵树重新染成同一种颜色，但是，由于一些奥妙重重的原因，每一次染色 Applese 可以选择两个有边相连"},{"title":"Educational Codeforces Round 47 (Rated for Div. 2)","date_published":"2018-07-22T11:25:56Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/cf-1009/","url":"https://lruihao.cn/posts/cf-1009/","tags":["Codeforces","ACM","C++","C"],"summary":"那天晚上报名了没打，第二天早上打的，也只出了两题。 1 A. Game Shopping 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include\u0026lt;iostream\u0026gt; using namespace std; int main(){ int n,m,s=0; cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m; int i,j; int c[1000],a[1000]; for(i=0;i\u0026lt;n;i++) cin\u0026gt;\u0026gt;c[i]; for(i=0;i\u0026lt;m;i++) cin\u0026gt;\u0026gt;a[i]; for(i=0,j=0;i\u0026lt;n;){ if(j==m) break; if(c[i]\u0026lt;=a[j]){ s++; j++; i++; } else i++; } if(i==n\u0026amp;\u0026amp;s==0) cout\u0026lt;\u0026lt;\u0026#34;0\\n\u0026#34;; else cout\u0026lt;\u0026lt;s\u0026lt;\u0026lt;endl; return 0; } 2 B. Minimum Ternary String 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; string s, ans; int main(){ cin \u0026gt;\u0026gt; s;","content_html":"那天晚上报名了没打，第二天早上打的，也只出了两题。 1 A. Game Shopping 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include\u0026lt;iostream\u0026gt; using namespace std; int main(){ int n,m,s=0; cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m; int i,j; int c[1000],a[1000]; for(i=0;i\u0026lt;n;i++) cin\u0026gt;\u0026gt;c[i]; for(i=0;i\u0026lt;m;i++) cin\u0026gt;\u0026gt;a[i]; for(i=0,j=0;i\u0026lt;n;){ if(j==m) break; if(c[i]\u0026lt;=a[j]){ s++; j++; i++; } else i++; } if(i==n\u0026amp;\u0026amp;s==0) cout\u0026lt;\u0026lt;\u0026#34;0\\n\u0026#34;; else cout\u0026lt;\u0026lt;s\u0026lt;\u0026lt;endl; return 0; } 2 B. Minimum Ternary String 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; string s, ans; int main(){ cin \u0026gt;\u0026gt; s;"},{"title":"深搜广搜","date_published":"2018-07-22T11:25:14&#43;08:00","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/dfs_bfs/","url":"https://lruihao.cn/posts/dfs_bfs/","tags":["ACM","BFS","DFS","搜索","C","C++"],"summary":"0.1 广度优先搜索（BFS） 广度优先搜索在进一步遍历图中顶点之前，先访问当前顶点的所有邻接结点。访问了就入队。 0.2 深度优先搜索（DFS） 深度优先搜索在搜索过程中访问某个顶点后，需要递归地访问此顶点的所有未访问过的相邻顶点。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42","content_html":"0.1 广度优先搜索（BFS） 广度优先搜索在进一步遍历图中顶点之前，先访问当前顶点的所有邻接结点。访问了就入队。 0.2 深度优先搜索（DFS） 深度优先搜索在搜索过程中访问某个顶点后，需要递归地访问此顶点的所有未访问过的相邻顶点。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42"},{"title":"Wannafly 挑战赛 18-序列","date_published":"2018-07-18T08:40:21Z","date_modified":"2018-07-18T08:40:21Z","id":"https://lruihao.cn/posts/wannafly-18/","url":"https://lruihao.cn/posts/wannafly-18/","tags":["组合数学","ACM","Nowcoder","C++","C"],"summary":"时间限制：C/C++ 1 秒，其他语言 2 秒 空间限制：C/C++ 262144K，其他语言 524288K 64bit IO Format: %lld 1 题目描述 有一个长度为 n 的序列 a，已知 a[1]=a[n]=1，且对于 2 \u0026lt;= x \u0026lt;= n，a[x] / a[x-1] 是以下三个数字之一 [ 1，-2，0.5 ], 问有多少种不同的序列满足题意。 两个序列不同当且仅当它们有至少一个位置上的数字不","content_html":"时间限制：C/C++ 1 秒，其他语言 2 秒 空间限制：C/C++ 262144K，其他语言 524288K 64bit IO Format: %lld 1 题目描述 有一个长度为 n 的序列 a，已知 a[1]=a[n]=1，且对于 2 \u0026lt;= x \u0026lt;= n，a[x] / a[x-1] 是以下三个数字之一 [ 1，-2，0.5 ], 问有多少种不同的序列满足题意。 两个序列不同当且仅当它们有至少一个位置上的数字不"},{"title":"简单背包","date_published":"2018-06-16T13:18:43Z","date_modified":"2018-06-16T13:18:43Z","id":"https://lruihao.cn/posts/%E7%AE%80%E5%8D%95%E8%83%8C%E5%8C%85/","url":"https://lruihao.cn/posts/%E7%AE%80%E5%8D%95%E8%83%8C%E5%8C%85/","tags":["背包问题","C"],"summary":"弱鸡还是弱鸡啊最简单的背包问题——。——！\n1 问题描述 假设有一个能装入总体积为 T 的背包和 n 件体积分别为 W1，W2，···，Wn 的物品，能否从 n 件物品中挑选若干件恰好装满背包，即使 W1+W2+···+Wn=T，要求找出所有满足上述条件的解。例如：当 T=10，共 6 件物品，物品的体积为{1，2，3，4，5，8}，那么可找到下列 4 组解：（1，2，3，4）、（1，4，5）、（2，3，5）、（2、8）。\n","content_html":"弱鸡还是弱鸡啊最简单的背包问题——。——！\n1 问题描述 假设有一个能装入总体积为 T 的背包和 n 件体积分别为 W1，W2，···，Wn 的物品，能否从 n 件物品中挑选若干件恰好装满背包，即使 W1+W2+···+Wn=T，要求找出所有满足上述条件的解。例如：当 T=10，共 6 件物品，物品的体积为{1，2，3，4，5，8}，那么可找到下列 4 组解：（1，2，3，4）、（1，4，5）、（2，3，5）、（2、8）。\n"},{"title":"B.Higher h-index","date_published":"2018-06-14T22:47:28Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/b-higher/","url":"https://lruihao.cn/posts/b-higher/","tags":["ACM","2018 湘潭邀请赛","C++","C"],"summary":"1 B. Higher h-index The h-index of an author is the largest h where he has at least h papers with citations not less than h.\nBobo has no papers and he is going to publish some subsequently. If he works on a paper for x hours, the\npaper will get (a·x) citations, where a is a known constant. It’s clear that x should be a positive integer.\nThere is also a trick – one can cite his own papers published earlier.\nGiven Bobo has n working hours, ﬁnd the maximum h-index of him.\n","content_html":"1 B. Higher h-index The h-index of an author is the largest h where he has at least h papers with citations not less than h.\nBobo has no papers and he is going to publish some subsequently. If he works on a paper for x hours, the\npaper will get (a·x) citations, where a is a known constant. It’s clear that x should be a positive integer.\nThere is also a trick – one can cite his own papers published earlier.\nGiven Bobo has n working hours, ﬁnd the maximum h-index of him.\n"}]}