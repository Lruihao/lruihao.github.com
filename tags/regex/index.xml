<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>regex 标签 | 菠菜眾長</title><link>https://lruihao.cn/tags/regex/</link><description>Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。</description><generator>Hugo 0.132.1 &amp; FixIt v0.3.10-1d651b5a</generator><language>zh-CN</language><managingEditor>1024@lruihao.cn (Lruihao)</managingEditor><webMaster>1024@lruihao.cn (Lruihao)</webMaster><copyright>本站内容采用 CC BY-NC-SA 4.0 国际许可协议。</copyright><lastBuildDate>Fri, 08 Dec 2023 20:26:13 +0800</lastBuildDate><atom:link href="https://lruihao.cn/tags/regex/index.xml" rel="self" type="application/rss+xml"/><item><title>java 正则表达式练习</title><link>https://lruihao.cn/posts/java-regex/</link><pubDate>Thu, 18 Apr 2019 22:04:21 +0000</pubDate><guid>https://lruihao.cn/posts/java-regex/</guid><description>1 邮箱 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import java.util.regex.Matcher; import java.util.regex.Pattern; public class RegexDemo { public static void main(String[] args) { // Pattern 类 正则表达式的编译表示。 Pattern pattern = Pattern.compile(&amp;#34;^[a-zA-Z0-9_!#$%&amp;amp;&amp;#39;*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$&amp;#34;); String[] emails = {&amp;#34;admin@lruihao.cn&amp;#34;, &amp;#34;lruihao.cn&amp;#34;}; for (String email : emails) { //Matcher 通过解释 Pattern 对字符序列执行匹配操作的引擎 Matcher matcher = pattern.matcher(email); System.out.println(email + &amp;#34;匹配结果：&amp;#34; + matcher.matches()); } } } 1 2 admin@lruihao.cn 匹配结果：true lruihao.cn 匹配结果：false 2 电话 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16</description></item></channel></rss>