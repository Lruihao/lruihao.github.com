<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java 标签 | 菠菜眾長</title><link>https://lruihao.cn/tags/java/</link><description>Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。</description><generator>Hugo 0.133.0 &amp; FixIt v0.3.10-cf42e4ea</generator><language>zh-CN</language><managingEditor>1024@lruihao.cn (Lruihao)</managingEditor><webMaster>1024@lruihao.cn (Lruihao)</webMaster><copyright>本站内容采用 CC BY-NC-SA 4.0 国际许可协议。</copyright><lastBuildDate>Sun, 09 Jun 2024 02:57:55 +0800</lastBuildDate><atom:link href="https://lruihao.cn/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>架构之基：从根儿上了解设计原则</title><link>https://lruihao.cn/posts/design-principles/</link><pubDate>Sun, 09 Jun 2024 02:24:31 +0800</pubDate><guid>https://lruihao.cn/posts/design-principles/</guid><description>设计模式不是必须的，但是如果你的代码是“非一次性的”，那么它就是必须的。</description></item><item><title>Web 开发规则，代码规范</title><link>https://lruihao.cn/posts/dev-rules/</link><pubDate>Thu, 15 Aug 2019 18:30:31 +0000</pubDate><guid>https://lruihao.cn/posts/dev-rules/</guid><description>1 精神 绝不写死代码，硬编码 不留不要用的、垃圾代码 2 Git Master 的 BUG 必须最少且趋近于零，为最稳定的版本 每次 Commit 信息应该准确填写。不可模棱两可，eg: 修复 BUG、增加功能 禁止 Commit IDE 的 project data，e.g: .vscode 禁止上传垃圾代码 更多规则详见文档 Commit 规范 2.1 分支（Branch） 命名规则：应以此分支主要目的命名（修复什么 BUG，新</description></item><item><title>java 实现一个单线程的资源下载器</title><link>https://lruihao.cn/posts/singlethreaddown/</link><pubDate>Wed, 08 May 2019 20:55:02 +0000</pubDate><guid>https://lruihao.cn/posts/singlethreaddown/</guid><description>&lt;blockquote>
&lt;p>实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。&lt;/p>
&lt;/blockquote></description></item><item><title>java 通过 URL 和 URLConnection 访问网页资源</title><link>https://lruihao.cn/posts/java-urlreader/</link><pubDate>Mon, 06 May 2019 17:41:35 +0000</pubDate><guid>https://lruihao.cn/posts/java-urlreader/</guid><description>&lt;blockquote>
&lt;p>该例中首先生成一个 URL 对象 lrh，指向 RUI 豪小栈，然后再调用 lrh.openStream() 方法生成该 URL 的一个输入流，这是一个字节流，在此基础上进一步通过 InputStreamReader 和 BufferedReader 构造一个带缓冲功能的字符流，并通过这个字符流对象读取该 URL 的 html 内容，进而输出到桌面文件和控制台屏幕。URLConnection 类也可以用来对由 URL 引用的资源进行读写操作，前提是先通过 connect() 方法建立连接，然后再去获取响应头信息或响应内容。&lt;/p>
&lt;/blockquote></description></item><item><title>文件加密解密（字节流）</title><link>https://lruihao.cn/posts/byteio/</link><pubDate>Thu, 02 May 2019 23:04:32 +0000</pubDate><guid>https://lruihao.cn/posts/byteio/</guid><description>&lt;blockquote>
&lt;p>基本功能：给定一个密钥，读取文件内容，加密后，输出到另外一个文件。&lt;/p>
&lt;p>这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。&lt;/p>
&lt;/blockquote></description></item><item><title>模拟借书系统（java 异常练习）</title><link>https://lruihao.cn/posts/javaexception/</link><pubDate>Wed, 01 May 2019 16:52:21 +0000</pubDate><guid>https://lruihao.cn/posts/javaexception/</guid><description/></item><item><title>用记事本编写第一个 java 程序</title><link>https://lruihao.cn/posts/hellojava/</link><pubDate>Fri, 19 Apr 2019 19:49:54 +0000</pubDate><guid>https://lruihao.cn/posts/hellojava/</guid><description>&lt;blockquote>
&lt;p>之所以用记事本来写不是为了装 X 或者什么的。反而恰恰是返璞归真，因为在用 java 语言进行程序开发时，首先是以纯文本的方式编写所有的 java 源程序，并保存成以&lt;code>.java&lt;/code>为后缀的文件；然后将这些源程序用&lt;code>javac&lt;/code>编译成&lt;code>.class&lt;/code>后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被 java 虚拟机（JVM）执行的代码。最后用 java 运行工具在 JVM 执行 java 应用程序。&lt;br>
由于 JVM 可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>javac&lt;/li>
&lt;li>java&lt;/li>
&lt;/ul></description></item><item><title>java 正则表达式练习</title><link>https://lruihao.cn/posts/java-regex/</link><pubDate>Thu, 18 Apr 2019 22:04:21 +0000</pubDate><guid>https://lruihao.cn/posts/java-regex/</guid><description>1 邮箱 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import java.util.regex.Matcher; import java.util.regex.Pattern; public class RegexDemo { public static void main(String[] args) { // Pattern 类 正则表达式的编译表示。 Pattern pattern = Pattern.compile(&amp;#34;^[a-zA-Z0-9_!#$%&amp;amp;&amp;#39;*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$&amp;#34;); String[] emails = {&amp;#34;admin@lruihao.cn&amp;#34;, &amp;#34;lruihao.cn&amp;#34;}; for (String email : emails) { //Matcher 通过解释 Pattern 对字符序列执行匹配操作的引擎 Matcher matcher = pattern.matcher(email); System.out.println(email + &amp;#34;匹配结果：&amp;#34; + matcher.matches()); } } } 1 2 admin@lruihao.cn 匹配结果：true lruihao.cn 匹配结果：false 2 电话 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16</description></item><item><title>java 常用类</title><link>https://lruihao.cn/posts/stringbuffer/</link><pubDate>Sun, 14 Apr 2019 10:12:44 +0000</pubDate><guid>https://lruihao.cn/posts/stringbuffer/</guid><description>1 StringBuffer/StringBuilder（掌握） 1.1 StringBuffer 是线程安全的可变字符串 StringBuilder 是线程不安全的可变字符串。 和 StringBuffer 的功能一样。就是效率高一些，但是不安全。 1.2 构造方法 StringBuffer sb = new StringBuffer(); StringBuffer sb = new StringBuffer(50); StringBuffer sb = new StringBuffer(&amp;ldquo;hello&amp;rdquo;); 1.3 成员方法：（自己补齐方法和意思） 添加功能 public StringBuffer append(String str): 追加字符串 public StringBuffer insert(int offset,String str): 在指定位置插入字符串 删除功能 public</description></item><item><title>Java 父类子类的对象初始化过程</title><link>https://lruihao.cn/posts/substatus/</link><pubDate>Thu, 21 Mar 2019 13:36:25 +0000</pubDate><guid>https://lruihao.cn/posts/substatus/</guid><description>&lt;blockquote>
&lt;p>摘要：Java 基本的对象初始化过程，子类的初始化，以及涉及到父类和子类的转化时可能引起混乱的情况。&lt;/p>
&lt;/blockquote></description></item><item><title>java 泛型 test</title><link>https://lruihao.cn/posts/fanxing/</link><pubDate>Sat, 16 Mar 2019 13:56:01 +0000</pubDate><guid>https://lruihao.cn/posts/fanxing/</guid><description>&lt;blockquote>
&lt;ul>
&lt;li>泛型方法，它在修饰符后，返回值类型前增加了类型参数 (&amp;lt;&amp;gt;)&lt;/li>
&lt;li>类型通配符一般使用问号&lt;code>?&lt;/code>代替具体的类型&lt;code>实&lt;/code>参，注意不是类型形参。&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>eclipse 的基本使用</title><link>https://lruihao.cn/posts/eclipseuse/</link><pubDate>Fri, 15 Mar 2019 23:47:24 +0000</pubDate><guid>https://lruihao.cn/posts/eclipseuse/</guid><description>1 基本使用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 A: 选择一个工作空间 D:\develop\eclipse-SDK-3.7.2-win64\workspace B: 如何写一个 HelloWorld 案例（代码以项目为基本单位） a: 创建项目（工程） *File -- New -- Java Project *在左边空白处，直接右键 -- New -- Java Project 键入项目名称后直接 Finish。 b: 所有的 java 文件必须写到 src 下面才有效 c: 创建一个包 cn.lruihao d: 在包下创建一个类 HelloWorld 同时让它帮我们写好</description></item><item><title>匿名类在可视化界面中的应用</title><link>https://lruihao.cn/posts/qframe/</link><pubDate>Fri, 15 Mar 2019 22:31:28 +0000</pubDate><guid>https://lruihao.cn/posts/qframe/</guid><description>&lt;blockquote>
&lt;p>java 中匿名类用的最多的地方就是可视化界面设计中，特别是将&lt;code>事件监听器&lt;/code>注册到某个组件上的时候。&lt;/p>
&lt;/blockquote></description></item><item><title>java 继承 test</title><link>https://lruihao.cn/posts/jicheng/</link><pubDate>Thu, 24 Jan 2019 15:07:50 +0000</pubDate><guid>https://lruihao.cn/posts/jicheng/</guid><description>&lt;div class="details admonition quote open">
 &lt;div class="details-summary admonition-title">
 &lt;i class="icon fa-solid fa-quote-right fa-fw" aria-hidden="true">&lt;/i>引用&lt;i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true">&lt;/i>
 &lt;/div>
 &lt;div class="details-content">
 &lt;div class="admonition-content">&lt;p>继承的好处：&lt;/p>
&lt;ol>
&lt;li>提高了代码的复用性&lt;/li>
&lt;li>提高了代码的维护性&lt;/li>
&lt;li>让类与类之间产生了关系，是多态的前提&lt;/li>
&lt;/ol>
&lt;p>继承的弊端：类的耦合性很强&lt;/p>
&lt;p>设计原则：低耦合，高内聚。&lt;/p>
&lt;ul>
&lt;li>耦合：类与类的关系。&lt;/li>
&lt;li>内聚：自己完成事情的能力。&lt;/li>
&lt;/ul>
&lt;/div>
 &lt;/div>
 &lt;/div></description></item><item><title>Arrays 类及基本使用</title><link>https://lruihao.cn/posts/java-arrays/</link><pubDate>Fri, 18 Jan 2019 13:13:10 +0000</pubDate><guid>https://lruihao.cn/posts/java-arrays/</guid><description>&lt;h2 id="主要方法" class="heading-element">&lt;span>1 主要方法&lt;/span>
 &lt;a href="#%e4%b8%bb%e8%a6%81%e6%96%b9%e6%b3%95" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;ul>
&lt;li>static type[] copyof(type[] original,int length)&lt;/li>
&lt;li>static int binarysearch(type[] a,type key)&lt;/li>
&lt;li>static boolean equals(type[] a,type[] b)&lt;/li>
&lt;li>static void fill(type[] a,type val)&lt;/li>
&lt;li>static void fill(type[] a,int fromindex,int toindex,type val)&lt;/li>
&lt;li>static void sort(type[] a)&lt;/li>
&lt;/ul></description></item><item><title>java 猜数字小游戏（Math 类）</title><link>https://lruihao.cn/posts/mathclass/</link><pubDate>Tue, 15 Jan 2019 17:33:28 +0000</pubDate><guid>https://lruihao.cn/posts/mathclass/</guid><description>&lt;blockquote>
&lt;p>大一刚学 c 的时候以前写过 &lt;a href="https://github.com/Lruihao/Grocery/tree/master/C%26C%2B%2B"target="_blank" rel="external nofollow noopener noreferrer">c 语言版&lt;i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true">&lt;/i>&lt;/a> 的。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>Math: 针对数学进行运算的类&lt;/li>
&lt;li>特点：没有构造方法，因为它的成员都是静态的&lt;/li>
&lt;li>产生随机数：
public static double random(): 产生随机数，范围 [0.0,1.0)&lt;/li>
&lt;li>产生 1-100 之间的随机数
int number = (int)(Math.random()*100)+1;&lt;/li>
&lt;li>猜数字小游戏案例&lt;/li>
&lt;/ol></description></item><item><title>面向对象基础知识总结</title><link>https://lruihao.cn/posts/duixiang/</link><pubDate>Tue, 15 Jan 2019 16:07:31 +0000</pubDate><guid>https://lruihao.cn/posts/duixiang/</guid><description>1 面向对象思想（理解） 面向对象是基于面向过程的一种编程思想 思想特点： A: 是一种更符合我们思考习惯的思想 B: 把复杂的问题简单化 C: 让我们从执行者变成了指挥者 举例： A: 洗衣服 B: 吃饭 C: 买电脑 举例并代码体现 把大象装进冰箱 2 类与对象（掌握） 我们学习编程是为了把现实世界的事物用编程语言描述来实现信息化。 现实世界事物是如</description></item><item><title>java 水仙花数（循环）</title><link>https://lruihao.cn/posts/java-range/</link><pubDate>Mon, 14 Jan 2019 17:30:24 +0000</pubDate><guid>https://lruihao.cn/posts/java-range/</guid><description>&lt;blockquote>
&lt;p>水仙花数（Narcissistic number）也被称为超完全数字不变数（pluperfect digital invariant, PPDI）、自恋数、自幂数、阿姆斯壮数或阿姆斯特朗数（Armstrong number），水仙花数是指一个 3 位数，它的每个位上的数字的 3 次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。&lt;/p>
&lt;/blockquote></description></item><item><title>java 录入数据</title><link>https://lruihao.cn/posts/java-input/</link><pubDate>Mon, 14 Jan 2019 15:33:46 +0000</pubDate><guid>https://lruihao.cn/posts/java-input/</guid><description>1 记忆格式 (1) 导包： import java.util.Scanner; 注意：位置在 class 的上面。 (2) 创建键盘录入对象： Scanner sc = new Scanner(System.in); (3) 获取数据 int i = sc.nextInt(); (4) 练习： A: 求两个数据的和 B: 获取两个数据中较大的值 C: 获取三个数据中较大的值 D: 比较两个数是否相等 2 实例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package helloworld; import java.util.Scanner; public class helloworld { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int i=sc.nextInt(),j=sc.nextInt(),k=sc.nextInt(); sc.close(); System.out.println(i+&amp;#34;+&amp;#34;+j+&amp;#34;=&amp;#34;+(i+j)); System.out.println(&amp;#34;MAXij=&amp;#34;+Max(i,j)); System.out.println(&amp;#34;MAXijk=&amp;#34;+Max(i,j,k));</description></item><item><title>java 标识符</title><link>https://lruihao.cn/posts/biaoshi/</link><pubDate>Mon, 14 Jan 2019 15:07:57 +0000</pubDate><guid>https://lruihao.cn/posts/biaoshi/</guid><description>1 标识符 给类，接口，方法或者变量起名字的符号 2 组成规则 A: 英文字母大小写 B: 数字 C:_和$ 3 注意事项 A: 不能以数字开头 B: 不能是 Java 中的关键字 C: 区分大小写 Student,student 这是两个名称 4 常见命名方式 A: 包 其实就是文件夹，用于解决相同类名问题 全部小写 单级：com 多级：cn.itcast B: 类或者接口 一个单词：首字母大写 Student,Person,Teacher 多个单词：</description></item></channel></rss>