{"version":"https://jsonfeed.org/version/1.1","title":"Codeforces 标签 | 菠菜眾長","description":"Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。","home_page_url":"https://lruihao.cn/","feed_url":"https://lruihao.cn/tags/codeforces/feed.json","language":"zh-CN","icon":"https://lruihao.cn/apple-touch-icon.png","favicon":"https://lruihao.cn/favicon.ico","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://lruihao.cn/images/avatar.jpg"}],"items":[{"title":"Dreamoon and Stairs","date_published":"2018-08-10T20:13:08Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/codeforces476a/","url":"https://lruihao.cn/posts/codeforces476a/","tags":["Codeforces","ACM","数学","C++","C"],"summary":"题目链接 Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. What is the minimal number of moves making him climb to the top of the stairs that satisfies his condition? 1 Input The single line contains two space separated integers n, m (0 \u0026lt; n ≤ 10000, 1 \u0026lt; m ≤ 10). 2 Output Print a single integer — the minimal number of moves being a multiple of m. If there is no way he can climb satisfying condition print - 1 instead. 3 Examples 3.1 input1 10 2 3.2 output1 6 3.3 input2 3 5 3.4 output2 -1 3.5 Note For the first sample, Dreamoon could climb in 6 moves with following sequence of steps: {2, 2, 2, 2, 1, 1}.","content_html":"题目链接 Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. What is the minimal number of moves making him climb to the top of the stairs that satisfies his condition? 1 Input The single line contains two space separated integers n, m (0 \u0026lt; n ≤ 10000, 1 \u0026lt; m ≤ 10). 2 Output Print a single integer — the minimal number of moves being a multiple of m. If there is no way he can climb satisfying condition print - 1 instead. 3 Examples 3.1 input1 10 2 3.2 output1 6 3.3 input2 3 5 3.4 output2 -1 3.5 Note For the first sample, Dreamoon could climb in 6 moves with following sequence of steps: {2, 2, 2, 2, 1, 1}."},{"title":"Dreamoon and WiFi（组合数学）","date_published":"2018-08-10T17:44:47Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/codeforces476b/","url":"https://lruihao.cn/posts/codeforces476b/","tags":["组合数学","Codeforces","ACM","数学","C++","C"],"summary":"题目链接 1 题目大意 就是给定两个字符串，第一个字符串由\u0026quot;+\u0026quot;,\u0026quot;-\u0026ldquo;组成，第二个字符串由\u0026rdquo;+\u0026quot;,\u0026quot;-\u0026quot;,\u0026quot;?\u0026ldquo;组成，“+”代表加 1，\u0026rdquo;-\u0026ldquo;代表减一，“?\u0026ldquo;代表可","content_html":"题目链接 1 题目大意 就是给定两个字符串，第一个字符串由\u0026quot;+\u0026quot;,\u0026quot;-\u0026ldquo;组成，第二个字符串由\u0026rdquo;+\u0026quot;,\u0026quot;-\u0026quot;,\u0026quot;?\u0026ldquo;组成，“+”代表加 1，\u0026rdquo;-\u0026ldquo;代表减一，“?\u0026ldquo;代表可"},{"title":"Codeforces Round 502(Div.1 + Div.2)","date_published":"2018-08-09T10:48:00Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/cfcontest1017/","url":"https://lruihao.cn/posts/cfcontest1017/","tags":["ACM","Codeforces","组合数学","C++"],"summary":"0.1 A. The Rank 题目大意：\n给出 n 个学生的成绩，Thomas Smith 的成绩是第一行，然后要按总成绩进行排序，总分相同的按编号从小到大排；\n开始看还以为要写 sort 的 cmp 函数进行多条件排序，敲完才发现其实只要按总分就可以了，因为托马斯的 id 是一，必然会排在前面。\n","content_html":"0.1 A. The Rank 题目大意：\n给出 n 个学生的成绩，Thomas Smith 的成绩是第一行，然后要按总成绩进行排序，总分相同的按编号从小到大排；\n开始看还以为要写 sort 的 cmp 函数进行多条件排序，敲完才发现其实只要按总分就可以了，因为托马斯的 id 是一，必然会排在前面。\n"},{"title":"Bear and Finding Criminals-Codeforces680B","date_published":"2018-07-31T19:32:21Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/codeforces680b/","url":"https://lruihao.cn/posts/codeforces680b/","tags":["Codeforces","ACM","C++"],"summary":"题目链接：Bear and Finding Criminals\n大致题意就是小熊警察住在某个城市，他要抓各个城市的罪犯，现在用一个 BCD 可以知道那个城市里一定有罪犯。\n一定能确定该城市有小偷的几种情况：\n警察所住城市有罪犯，则一定能检测到\n警察所住城市的左边和右边位置若都不为 0，则说明两座城市都有罪犯（只有一边为 1 是不能确定到底哪个城市有罪犯的）\n警察所在城市的一边检测到有罪犯，但在另一边已经没有城市了，则说明该城市一定有罪犯\n","content_html":"题目链接：Bear and Finding Criminals\n大致题意就是小熊警察住在某个城市，他要抓各个城市的罪犯，现在用一个 BCD 可以知道那个城市里一定有罪犯。\n一定能确定该城市有小偷的几种情况：\n警察所住城市有罪犯，则一定能检测到\n警察所住城市的左边和右边位置若都不为 0，则说明两座城市都有罪犯（只有一边为 1 是不能确定到底哪个城市有罪犯的）\n警察所在城市的一边检测到有罪犯，但在另一边已经没有城市了，则说明该城市一定有罪犯\n"},{"title":"Bear and Five Cards-Codeforces680A","date_published":"2018-07-31T19:22:36Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/codeforces680a/","url":"https://lruihao.cn/posts/codeforces680a/","tags":["Codeforces","ACM","C++"],"summary":"题目链接：Bear and Five Cards\n大致题意就是小熊有 5 张卡片，每张卡片有对应的分数，他可以选择丢弃 2 张相同的或者 3 张相同的卡片，没有相同的就无法丢弃，问小熊剩下的分数最少是多少。\n","content_html":"题目链接：Bear and Five Cards\n大致题意就是小熊有 5 张卡片，每张卡片有对应的分数，他可以选择丢弃 2 张相同的或者 3 张相同的卡片，没有相同的就无法丢弃，问小熊剩下的分数最少是多少。\n"},{"title":"Piles-with-stones","date_published":"2018-07-31T11:09:31Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/piles-with-stones/","url":"https://lruihao.cn/posts/piles-with-stones/","tags":["ACM","Codeforces","C++"],"summary":"Codeforces Round #500 (Div. 2)\n题目链接：Piles With Stones\n","content_html":"Codeforces Round #500 (Div. 2)\n题目链接：Piles With Stones\n"},{"title":"Adjacent Replacements","date_published":"2018-07-22T11:54:14Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/adjacent-replacements/","url":"https://lruihao.cn/posts/adjacent-replacements/","tags":["Codeforces","ACM","C++"],"summary":"A. Adjacent Replacements 第一次打 cf 就做出一道这样的找规律的题，打到自闭。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include\u0026lt;bits/stdc++.h\u0026gt; using namespace std; int main(){ int n,a[1001]; cin\u0026gt;\u0026gt;n; int i; int flag=0; for(i=0;i\u0026lt;n;i++){ cin\u0026gt;\u0026gt;a[i]; if(!(a[i]\u0026amp;1)) a[i]--; if(!flag) {cout\u0026lt;\u0026lt;a[i];flag=1;} else cout\u0026lt;\u0026lt;\u0026#34; \u0026#34;\u0026lt;\u0026lt;a[i]; } return 0; }","content_html":"A. Adjacent Replacements 第一次打 cf 就做出一道这样的找规律的题，打到自闭。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include\u0026lt;bits/stdc++.h\u0026gt; using namespace std; int main(){ int n,a[1001]; cin\u0026gt;\u0026gt;n; int i; int flag=0; for(i=0;i\u0026lt;n;i++){ cin\u0026gt;\u0026gt;a[i]; if(!(a[i]\u0026amp;1)) a[i]--; if(!flag) {cout\u0026lt;\u0026lt;a[i];flag=1;} else cout\u0026lt;\u0026lt;\u0026#34; \u0026#34;\u0026lt;\u0026lt;a[i]; } return 0; }"},{"title":"Educational Codeforces Round 47 (Rated for Div. 2)","date_published":"2018-07-22T11:25:56Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/cf-1009/","url":"https://lruihao.cn/posts/cf-1009/","tags":["Codeforces","ACM","C++","C"],"summary":"那天晚上报名了没打，第二天早上打的，也只出了两题。 1 A. Game Shopping 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include\u0026lt;iostream\u0026gt; using namespace std; int main(){ int n,m,s=0; cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m; int i,j; int c[1000],a[1000]; for(i=0;i\u0026lt;n;i++) cin\u0026gt;\u0026gt;c[i]; for(i=0;i\u0026lt;m;i++) cin\u0026gt;\u0026gt;a[i]; for(i=0,j=0;i\u0026lt;n;){ if(j==m) break; if(c[i]\u0026lt;=a[j]){ s++; j++; i++; } else i++; } if(i==n\u0026amp;\u0026amp;s==0) cout\u0026lt;\u0026lt;\u0026#34;0\\n\u0026#34;; else cout\u0026lt;\u0026lt;s\u0026lt;\u0026lt;endl; return 0; } 2 B. Minimum Ternary String 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; string s, ans; int main(){ cin \u0026gt;\u0026gt; s;","content_html":"那天晚上报名了没打，第二天早上打的，也只出了两题。 1 A. Game Shopping 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include\u0026lt;iostream\u0026gt; using namespace std; int main(){ int n,m,s=0; cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m; int i,j; int c[1000],a[1000]; for(i=0;i\u0026lt;n;i++) cin\u0026gt;\u0026gt;c[i]; for(i=0;i\u0026lt;m;i++) cin\u0026gt;\u0026gt;a[i]; for(i=0,j=0;i\u0026lt;n;){ if(j==m) break; if(c[i]\u0026lt;=a[j]){ s++; j++; i++; } else i++; } if(i==n\u0026amp;\u0026amp;s==0) cout\u0026lt;\u0026lt;\u0026#34;0\\n\u0026#34;; else cout\u0026lt;\u0026lt;s\u0026lt;\u0026lt;endl; return 0; } 2 B. Minimum Ternary String 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; string s, ans; int main(){ cin \u0026gt;\u0026gt; s;"}]}