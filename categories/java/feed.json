{"version":"https://jsonfeed.org/version/1.1","title":"Java - 分类 | 菠菜眾長","description":"Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。","home_page_url":"https://lruihao.cn/","language":"zh-CN","icon":"https://lruihao.cn/apple-touch-icon.png","favicon":"https://lruihao.cn/favicon.ico","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://lruihao.cn/images/avatar.jpg"}],"items":[{"title":"java 实现一个单线程的资源下载器","date_published":"2019-05-08T20:55:02Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/singlethreaddown/","url":"https://lruihao.cn/posts/singlethreaddown/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["GUI","URLConnection","HTTP","Java"],"image":"https://lruihao.cn/posts/singlethreaddown/images/1.png","summary":"实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。\n","content_html":"\u003cblockquote\u003e\u003cp\u003e实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。\u003c/p\u003e\n\u003c/blockquote\u003e"},{"title":"java 通过 URL 和 URLConnection 访问网页资源","date_published":"2019-05-06T17:41:35Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-urlreader/","url":"https://lruihao.cn/posts/java-urlreader/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["URLConnection","Java"],"summary":"该例中首先生成一个 URL 对象 lrh，指向 RUI 豪小栈，然后再调用 lrh.openStream() 方法生成该 URL 的一个输入流，这是一个字节流，在此基础上进一步通过 InputStreamReader 和 BufferedReader 构造一个带缓冲功能的字符流，并通过这个字符流对象读取该 URL 的 html 内容，进而输出到桌面文件和控制台屏幕。URLConnection 类也可以用来对由 URL 引用的资源进行读写操作，前提是先通过 connect() 方法建立连接，然后再去获取响应头信息或响应内容。\n","content_html":"\u003cblockquote\u003e\u003cp\u003e该例中首先生成一个 URL 对象 lrh，指向 RUI 豪小栈，然后再调用 lrh.openStream() 方法生成该 URL 的一个输入流，这是一个字节流，在此基础上进一步通过 InputStreamReader 和 BufferedReader 构造一个带缓冲功能的字符流，并通过这个字符流对象读取该 URL 的 html 内容，进而输出到桌面文件和控制台屏幕。URLConnection 类也可以用来对由 URL 引用的资源进行读写操作，前提是先通过 connect() 方法建立连接，然后再去获取响应头信息或响应内容。\u003c/p\u003e\n\u003c/blockquote\u003e"},{"title":"文件加密解密（字节流）","date_published":"2019-05-02T23:04:32Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/byteio/","url":"https://lruihao.cn/posts/byteio/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java"],"summary":"基本功能：给定一个密钥，读取文件内容，加密后，输出到另外一个文件。\n这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。\n","content_html":"\u003cblockquote\u003e\u003cp\u003e基本功能：给定一个密钥，读取文件内容，加密后，输出到另外一个文件。\u003c/p\u003e\n\u003cp\u003e这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。\u003c/p\u003e\n\u003c/blockquote\u003e"},{"title":"模拟借书系统（java 异常练习）","date_published":"2019-05-01T16:52:21Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/javaexception/","url":"https://lruihao.cn/posts/javaexception/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java"],"image":"/posts/javaexception/images/1.png","content_html":"模拟借书系统（java 异常练习）"},{"title":"用记事本编写第一个 java 程序","date_published":"2019-04-19T19:49:54Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/hellojava/","url":"https://lruihao.cn/posts/hellojava/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java"],"summary":"之所以用记事本来写不是为了装 X 或者什么的。反而恰恰是返璞归真，因为在用 java 语言进行程序开发时，首先是以纯文本的方式编写所有的 java 源程序，并保存成以.java为后缀的文件；然后将这些源程序用javac编译成.class后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被 java 虚拟机（JVM）执行的代码。最后用 java 运行工具在 JVM 执行 java 应用程序。\n由于 JVM 可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。\njavac java ","content_html":"\u003cblockquote\u003e\u003cp\u003e之所以用记事本来写不是为了装 X 或者什么的。反而恰恰是返璞归真，因为在用 java 语言进行程序开发时，首先是以纯文本的方式编写所有的 java 源程序，并保存成以\u003ccode\u003e.java\u003c/code\u003e为后缀的文件；然后将这些源程序用\u003ccode\u003ejavac\u003c/code\u003e编译成\u003ccode\u003e.class\u003c/code\u003e后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被 java 虚拟机（JVM）执行的代码。最后用 java 运行工具在 JVM 执行 java 应用程序。\u003cbr\u003e\n由于 JVM 可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。\u003c/p\u003e\n\u003c/blockquote\u003e\u003cul\u003e\n\u003cli\u003ejavac\u003c/li\u003e\n\u003cli\u003ejava\u003c/li\u003e\n\u003c/ul\u003e"},{"title":"java 正则表达式练习","date_published":"2019-04-18T22:04:21Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-regex/","url":"https://lruihao.cn/posts/java-regex/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["regex","Java"],"summary":"1 邮箱 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ","content_html":"\u003ch2 id=\"邮箱\" class=\"heading-element\"\u003e\u003cspan\u003e1 邮箱\u003c/span\u003e\n  \u003ca href=\"#%e9%82%ae%e7%ae%b1\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/a\u003e\n\u003c/h2\u003e\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e 1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e16\n\u003c/span\u003e\u003c/code\u003e\u003c/pr"},{"title":"java 常用类","date_published":"2019-04-14T10:12:44Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/stringbuffer/","url":"https://lruihao.cn/posts/stringbuffer/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["StringBuffer","sort","Java"],"summary":"1 StringBuffer/StringBuilder（掌握） ","content_html":"\u003ch2 id=\"stringbufferstringbuilder掌握\" class=\"heading-element\"\u003e\u003cspan\u003e1 StringBuffer/StringBuilder（掌握）\u003c/span\u003e\n  \u003ca href=\"#stringbufferstringbuilder%e6%8e%8c%e6%8f%a1\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/pa"},{"title":"Java 父类子类的对象初始化过程","date_published":"2019-03-21T13:36:25Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/substatus/","url":"https://lruihao.cn/posts/substatus/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java"],"summary":"摘要：Java 基本的对象初始化过程，子类的初始化，以及涉及到父类和子类的转化时可能引起混乱的情况。\n","content_html":"\u003cblockquote\u003e\u003cp\u003e摘要：Java 基本的对象初始化过程，子类的初始化，以及涉及到父类和子类的转化时可能引起混乱的情况。\u003c/p\u003e\n\u003c/blockquote\u003e"},{"title":"java 泛型 test","date_published":"2019-03-16T13:56:01Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/fanxing/","url":"https://lruihao.cn/posts/fanxing/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["泛型","Java"],"summary":" 泛型方法，它在修饰符后，返回值类型前增加了类型参数 (\u0026lt;\u0026gt;) 类型通配符一般使用问号?代替具体的类型实参，注意不是类型形参。 ","content_html":"\u003cblockquote\u003e\u003cul\u003e\n\u003cli\u003e泛型方法，它在修饰符后，返回值类型前增加了类型参数 (\u0026lt;\u0026gt;)\u003c/li\u003e\n\u003cli\u003e类型通配符一般使用问号\u003ccode\u003e?\u003c/code\u003e代替具体的类型\u003ccode\u003e实\u003c/code\u003e参，注意不是类型形参。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e"},{"title":"匿名类在可视化界面中的应用","date_published":"2019-03-15T22:31:28Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/qframe/","url":"https://lruihao.cn/posts/qframe/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["GUI","Java"],"summary":"java 中匿名类用的最多的地方就是可视化界面设计中，特别是将事件监听器注册到某个组件上的时候。\n","content_html":"\u003cblockquote\u003e\u003cp\u003ejava 中匿名类用的最多的地方就是可视化界面设计中，特别是将\u003ccode\u003e事件监听器\u003c/code\u003e注册到某个组件上的时候。\u003c/p\u003e\n\u003c/blockquote\u003e"},{"title":"java 继承 test","date_published":"2019-01-24T15:07:50Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/jicheng/","url":"https://lruihao.cn/posts/jicheng/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java"],"summary":" 引用 继承的好处：\n提高了代码的复用性 提高了代码的维护性 让类与类之间产生了关系，是多态的前提 继承的弊端：类的耦合性很强\n设计原则：低耦合，高内聚。\n耦合：类与类的关系。 内聚：自己完成事情的能力。 ","content_html":"\u003cdiv class=\"details admonition quote open\"\u003e\n    \u003cdiv class=\"details-summary admonition-title\"\u003e\n      \u003ci class=\"icon fa-solid fa-quote-right fa-fw\" aria-hidden=\"true\"\u003e\u003c/i\u003e引用\u003ci class=\"details-icon fa-solid fa-angle-right fa-fw\" aria-hidden=\"true\"\u003e\u003c/i\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"details-content\"\u003e\n      \u003cdiv class=\"admonition-content\"\u003e\u003cp\u003e继承的好处：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e提高了代码的复用性\u003c/li\u003e\n\u003cli\u003e提高了代码的维护性\u003c/li\u003e\n\u003cli\u003e让类与类之间产生了关系，是多态的前提\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e继承的弊端：类的耦合性很强\u003c/p\u003e\n\u003cp\u003e设计原则：低耦合，高内聚。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e耦合：类与类的关系。\u003c/li\u003e\n\u003cli\u003e内聚：自己完成事情的能力。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e"},{"title":"Arrays 类及基本使用","date_published":"2019-01-18T13:13:10Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-arrays/","url":"https://lruihao.cn/posts/java-arrays/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java","Collator","Comparator"],"summary":"1 主要方法 static type[] copyof(type[] original,int length) static int binarysearch(type[] a,type key) static boolean equals(type[] a,type[] b) static void fill(type[] a,type val) static void fill(type[] a,int fromindex,int toindex,type val) static void sort(type[] a) ","content_html":"\u003ch2 id=\"主要方法\" class=\"heading-element\"\u003e\u003cspan\u003e1 主要方法\u003c/span\u003e\n  \u003ca href=\"#%e4%b8%bb%e8%a6%81%e6%96%b9%e6%b3%95\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/a\u003e\n\u003c/h2\u003e\u003cul\u003e\n\u003cli\u003estatic type[] copyof(type[] original,int length)\u003c/li\u003e\n\u003cli\u003estatic int binarysearch(type[] a,type key)\u003c/li\u003e\n\u003cli\u003estatic boolean equals(type[] a,type[] b)\u003c/li\u003e\n\u003cli\u003estatic void fill(type[] a,type val)\u003c/li\u003e\n\u003cli\u003estatic void fill(type[] a,int fromindex,int toindex,type val)\u003c/li\u003e\n\u003cli\u003estatic void sort(type[] a)\u003c/li\u003e\n\u003c/ul\u003e"},{"title":"java 猜数字小游戏（Math 类）","date_published":"2019-01-15T17:33:28Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/mathclass/","url":"https://lruihao.cn/posts/mathclass/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java"],"summary":"大一刚学 c 的时候以前写过 c 语言版 的。\nMath: 针对数学进行运算的类 特点：没有构造方法，因为它的成员都是静态的 产生随机数： public static double random(): 产生随机数，范围 [0.0,1.0) 产生 1-100 之间的随机数 int number = (int)(Math.random()*100)+1; 猜数字小游戏案例 ","content_html":"\u003cblockquote\u003e\u003cp\u003e大一刚学 c 的时候以前写过 \u003ca href=\"https://github.com/Lruihao/Grocery/tree/master/C%26C%2B%2B\"target=\"_blank\" rel=\"external nofollow noopener noreferrer\"\u003ec 语言版\u003ci class=\"fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary\" aria-hidden=\"true\"\u003e\u003c/i\u003e\u003c/a\u003e 的。\u003c/p\u003e\n\u003c/blockquote\u003e\u003col\u003e\n\u003cli\u003eMath: 针对数学进行运算的类\u003c/li\u003e\n\u003cli\u003e特点：没有构造方法，因为它的成员都是静态的\u003c/li\u003e\n\u003cli\u003e产生随机数：\npublic static double random(): 产生随机数，范围 [0.0,1.0)\u003c/li\u003e\n\u003cli\u003e产生 1-100 之间的随机数\nint number = (int)(Math.random()*100)+1;\u003c/li\u003e\n\u003cli\u003e猜数字小游戏案例\u003c/li\u003e\n\u003c/ol\u003e"},{"title":"面向对象基础知识总结","date_published":"2019-01-15T16:07:31Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/duixiang/","url":"https://lruihao.cn/posts/duixiang/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["面向对象","Java"],"summary":"1 面向对象思想（理解） 面向对象是基于面向过程的一种编程思想 思想特点：\nA: 是一种更符合我们思考习惯的思想\nB: 把复杂的问题简单化\nC: 让我们从执行者变成了指挥者 举例：\nA: 洗衣服\nB: 吃饭\nC: 买电脑 举例并代码体现 把大象装进冰箱 2 类与对象（掌握） ","content_html":"\u003ch2 id=\"面向对象思想理解\" class=\"heading-element\"\u003e\u003cspan\u003e1 面向对象思想（理解）\u003c/span\u003e\n  \u003ca href=\"#%e9%9d%a2%e5%90%91%e5%af%b9%e8%b1%a1%e6%80%9d%e6%83%b3%e7%90%86%e8%a7%a3\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/a\u003e\n\u003c/h2\u003e\u003col\u003e\n\u003cli\u003e面向对象是基于面向过程的一种编程思想\u003c/li\u003e\n\u003cli\u003e思想特点：\u003cbr\u003e\nA: 是一种更符合我们思考习惯的思想\u003cbr\u003e\nB: 把复杂的问题简单化\u003cbr\u003e\nC: 让我们从执行者变成了指挥者\u003c/li\u003e\n\u003cli\u003e举例：\u003cbr\u003e\nA: 洗衣服\u003cbr\u003e\nB: 吃饭\u003cbr\u003e\nC: 买电脑\u003c/li\u003e\n\u003cli\u003e举例并代码体现\n把大象装进冰箱\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"类与对象掌握\" class=\"heading-element\"\u003e\u003cspan\u003e2 类与对象（掌握）\u003c/span\u003e\n  \u003ca href=\"#%e7%b1%bb%e4%b8%8e%e5%af%b9%e8%b1%a1%e6%8e%8c%e6%8f%a1\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/pa"},{"title":"java 水仙花数（循环）","date_published":"2019-01-14T17:30:24Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-range/","url":"https://lruihao.cn/posts/java-range/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["水仙花数","Java"],"summary":"水仙花数（Narcissistic number）也被称为超完全数字不变数（pluperfect digital invariant, PPDI）、自恋数、自幂数、阿姆斯壮数或阿姆斯特朗数（Armstrong number），水仙花数是指一个 3 位数，它的每个位上的数字的 3 次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。\n","content_html":"\u003cblockquote\u003e\u003cp\u003e水仙花数（Narcissistic number）也被称为超完全数字不变数（pluperfect digital invariant, PPDI）、自恋数、自幂数、阿姆斯壮数或阿姆斯特朗数（Armstrong number），水仙花数是指一个 3 位数，它的每个位上的数字的 3 次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。\u003c/p\u003e\n\u003c/blockquote\u003e"},{"title":"java 录入数据","date_published":"2019-01-14T15:33:46Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-input/","url":"https://lruihao.cn/posts/java-input/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java"],"summary":"1 记忆格式 (1) 导包：\nimport java.util.Scanner;\n注意：位置在 class 的上面。\n(2) 创建键盘录入对象：\nScanner sc = new Scanner(System.in);\n(3) 获取数据\nint i = sc.nextInt();\n(4) 练习：\nA: 求两个数据的和\nB: 获取两个数据中较大的值\nC: 获取三个数据中较大的值\nD: 比较两个数是否相等\n","content_html":"\u003ch2 id=\"记忆格式\" class=\"heading-element\"\u003e\u003cspan\u003e1 记忆格式\u003c/span\u003e\n  \u003ca href=\"#%e8%ae%b0%e5%bf%86%e6%a0%bc%e5%bc%8f\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/a\u003e\n\u003c/h2\u003e\u003cp\u003e(1) 导包：\u003cbr\u003e\nimport java.util.Scanner;\u003cbr\u003e\n注意：位置在 class 的上面。\u003cbr\u003e\n(2) 创建键盘录入对象：\u003cbr\u003e\nScanner sc = new Scanner(System.in);\u003cbr\u003e\n(3) 获取数据\u003cbr\u003e\nint i = sc.nextInt();\u003cbr\u003e\n(4) 练习：\u003cbr\u003e\nA: 求两个数据的和\u003cbr\u003e\nB: 获取两个数据中较大的值\u003cbr\u003e\nC: 获取三个数据中较大的值\u003cbr\u003e\nD: 比较两个数是否相等\u003c/p\u003e"},{"title":"java 标识符","date_published":"2019-01-14T15:07:57Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/biaoshi/","url":"https://lruihao.cn/posts/biaoshi/","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://gravatar.lruihao.cn/avatar/fee47a2f4f2cc71f99a02b0a73ecfee0?s=32&amp;d=mp"}],"tags":["Java"],"summary":"1 标识符 给类，接口，方法或者变量起名字的符号\n2 组成规则 ","content_html":"\u003ch2 id=\"标识符\" class=\"heading-element\"\u003e\u003cspan\u003e1 标识符\u003c/span\u003e\n  \u003ca href=\"#%e6%a0%87%e8%af%86%e7%ac%a6\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/path\u003e\u003c/svg\u003e\n  \u003c/a\u003e\n\u003c/h2\u003e\u003cp\u003e给类，接口，方法或者变量起名字的符号\u003c/p\u003e\n\u003ch2 id=\"组成规则\" class=\"heading-element\"\u003e\u003cspan\u003e2 组成规则\u003c/span\u003e\n  \u003ca href=\"#%e7%bb%84%e6%88%90%e8%a7%84%e5%88%99\" class=\"heading-mark\"\u003e\n    \u003csvg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"\u003e\u003cpath d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"\u003e\u003c/pa"}]}