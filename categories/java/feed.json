{"version":"https://jsonfeed.org/version/1.1","title":"Java 分类 | 菠菜眾長","description":"Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。","home_page_url":"https://lruihao.cn/","feed_url":"https://lruihao.cn/categories/java/feed.json","language":"zh-CN","icon":"https://lruihao.cn/apple-touch-icon.png","favicon":"https://lruihao.cn/favicon.ico","authors":[{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://lruihao.cn/images/avatar.jpg"}],"items":[{"title":"java 实现一个单线程的资源下载器","date_published":"2019-05-08T20:55:02Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/singlethreaddown/","url":"https://lruihao.cn/posts/singlethreaddown/","tags":["GUI","URLConnection","HTTP","Java"],"summary":" 实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。\n","content_html":" 实现一个简单的基于单线程的资源下载器，如图所示，用户可以任意指定下载资源的链接地址，系统根据该地址判断资源是否存在，如果存在，则将该资源下载到本地。\n"},{"title":"java 通过 URL 和 URLConnection 访问网页资源","date_published":"2019-05-06T17:41:35Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-urlreader/","url":"https://lruihao.cn/posts/java-urlreader/","tags":["URLConnection","Java"],"summary":" 该例中首先生成一个 URL 对象 lrh，指向 RUI 豪小栈，然后再调用 lrh.openStream() 方法生成该 URL 的一个输入流，这是一个字节流，在此基础上进一步通过 InputStreamReader 和 BufferedReader 构造一个带缓冲功能的字符流，并通过这个字符流对象读取该 URL 的 html 内容，进而输出到桌面文件和控制台屏幕。URLConnection 类也可以用来对由 URL 引用的资源进行读写操作，前提是先通过 connect() 方法建立连接，然后再去获取响应头信息或响应内容。\n","content_html":" 该例中首先生成一个 URL 对象 lrh，指向 RUI 豪小栈，然后再调用 lrh.openStream() 方法生成该 URL 的一个输入流，这是一个字节流，在此基础上进一步通过 InputStreamReader 和 BufferedReader 构造一个带缓冲功能的字符流，并通过这个字符流对象读取该 URL 的 html 内容，进而输出到桌面文件和控制台屏幕。URLConnection 类也可以用来对由 URL 引用的资源进行读写操作，前提是先通过 connect() 方法建立连接，然后再去获取响应头信息或响应内容。\n"},{"title":"文件加密解密（字节流）","date_published":"2019-05-02T23:04:32Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/byteio/","url":"https://lruihao.cn/posts/byteio/","tags":["Java"],"summary":" 基本功能：给定一个密钥，读取文件内容，加密后，输出到另外一个文件。\n这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。\n","content_html":" 基本功能：给定一个密钥，读取文件内容，加密后，输出到另外一个文件。\n这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。\n"},{"title":"模拟借书系统（java 异常练习）","date_published":"2019-05-01T16:52:21Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/javaexception/","url":"https://lruihao.cn/posts/javaexception/","tags":["Java"]},{"title":"用记事本编写第一个 java 程序","date_published":"2019-04-19T19:49:54Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/hellojava/","url":"https://lruihao.cn/posts/hellojava/","tags":["Java"],"summary":" 之所以用记事本来写不是为了装 X 或者什么的。反而恰恰是返璞归真，因为在用 java 语言进行程序开发时，首先是以纯文本的方式编写所有的 java 源程序，并保存成以.java为后缀的文件；然后将这些源程序用javac编译成.class后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被 java 虚拟机（JVM）执行的代码。最后用 java 运行工具在 JVM 执行 java 应用程序。\n由于 JVM 可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。\njavac java ","content_html":" 之所以用记事本来写不是为了装 X 或者什么的。反而恰恰是返璞归真，因为在用 java 语言进行程序开发时，首先是以纯文本的方式编写所有的 java 源程序，并保存成以.java为后缀的文件；然后将这些源程序用javac编译成.class后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被 java 虚拟机（JVM）执行的代码。最后用 java 运行工具在 JVM 执行 java 应用程序。\n由于 JVM 可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。\njavac java "},{"title":"java 正则表达式练习","date_published":"2019-04-18T22:04:21Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-regex/","url":"https://lruihao.cn/posts/java-regex/","tags":["regex","Java"],"summary":"1 邮箱 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import java.util.regex.Matcher; import java.util.regex.Pattern; public class RegexDemo { public static void main(String[] args) { // Pattern 类 正则表达式的编译表示。 Pattern pattern = Pattern.compile(\u0026#34;^[a-zA-Z0-9_!#$%\u0026amp;\u0026#39;*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$\u0026#34;); String[] emails = {\u0026#34;admin@lruihao.cn\u0026#34;, \u0026#34;lruihao.cn\u0026#34;}; for (String email : emails) { //Matcher 通过解释 Pattern 对字符序列执行匹配操作的引擎 Matcher matcher = pattern.matcher(email); System.out.println(email + \u0026#34;匹配结果：\u0026#34; + matcher.matches()); } } } 1 2 admin@lruihao.cn 匹配结果：true lruihao.cn 匹配结果：false 2 电话 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16","content_html":"1 邮箱 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import java.util.regex.Matcher; import java.util.regex.Pattern; public class RegexDemo { public static void main(String[] args) { // Pattern 类 正则表达式的编译表示。 Pattern pattern = Pattern.compile(\u0026#34;^[a-zA-Z0-9_!#$%\u0026amp;\u0026#39;*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$\u0026#34;); String[] emails = {\u0026#34;admin@lruihao.cn\u0026#34;, \u0026#34;lruihao.cn\u0026#34;}; for (String email : emails) { //Matcher 通过解释 Pattern 对字符序列执行匹配操作的引擎 Matcher matcher = pattern.matcher(email); System.out.println(email + \u0026#34;匹配结果：\u0026#34; + matcher.matches()); } } } 1 2 admin@lruihao.cn 匹配结果：true lruihao.cn 匹配结果：false 2 电话 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16"},{"title":"java 常用类","date_published":"2019-04-14T10:12:44Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/stringbuffer/","url":"https://lruihao.cn/posts/stringbuffer/","tags":["StringBuffer","sort","Java"],"summary":"1 StringBuffer/StringBuilder（掌握） 1.1 StringBuffer 是线程安全的可变字符串 StringBuilder 是线程不安全的可变字符串。 和 StringBuffer 的功能一样。就是效率高一些，但是不安全。 1.2 构造方法 StringBuffer sb = new StringBuffer(); StringBuffer sb = new StringBuffer(50); StringBuffer sb = new StringBuffer(\u0026ldquo;hello\u0026rdquo;); 1.3 成员方法：（自己补齐方法和意思） 添加功能 public StringBuffer append(String str): 追加字符串 public StringBuffer insert(int offset,String str): 在指定位置插入字符串 删除功能 public","content_html":"1 StringBuffer/StringBuilder（掌握） 1.1 StringBuffer 是线程安全的可变字符串 StringBuilder 是线程不安全的可变字符串。 和 StringBuffer 的功能一样。就是效率高一些，但是不安全。 1.2 构造方法 StringBuffer sb = new StringBuffer(); StringBuffer sb = new StringBuffer(50); StringBuffer sb = new StringBuffer(\u0026ldquo;hello\u0026rdquo;); 1.3 成员方法：（自己补齐方法和意思） 添加功能 public StringBuffer append(String str): 追加字符串 public StringBuffer insert(int offset,String str): 在指定位置插入字符串 删除功能 public"},{"title":"Java 父类子类的对象初始化过程","date_published":"2019-03-21T13:36:25Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/substatus/","url":"https://lruihao.cn/posts/substatus/","tags":["Java"],"summary":" 摘要：Java 基本的对象初始化过程，子类的初始化，以及涉及到父类和子类的转化时可能引起混乱的情况。\n","content_html":" 摘要：Java 基本的对象初始化过程，子类的初始化，以及涉及到父类和子类的转化时可能引起混乱的情况。\n"},{"title":"java 泛型 test","date_published":"2019-03-16T13:56:01Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/fanxing/","url":"https://lruihao.cn/posts/fanxing/","tags":["泛型","Java"],"summary":" 泛型方法，它在修饰符后，返回值类型前增加了类型参数 (\u0026lt;\u0026gt;) 类型通配符一般使用问号?代替具体的类型实参，注意不是类型形参。 ","content_html":" 泛型方法，它在修饰符后，返回值类型前增加了类型参数 (\u0026lt;\u0026gt;) 类型通配符一般使用问号?代替具体的类型实参，注意不是类型形参。 "},{"title":"匿名类在可视化界面中的应用","date_published":"2019-03-15T22:31:28Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/qframe/","url":"https://lruihao.cn/posts/qframe/","tags":["GUI","Java"],"summary":" java 中匿名类用的最多的地方就是可视化界面设计中，特别是将事件监听器注册到某个组件上的时候。\n","content_html":" java 中匿名类用的最多的地方就是可视化界面设计中，特别是将事件监听器注册到某个组件上的时候。\n"},{"title":"java 继承 test","date_published":"2019-01-24T15:07:50Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/jicheng/","url":"https://lruihao.cn/posts/jicheng/","tags":["Java"],"summary":" 引用 继承的好处：\n提高了代码的复用性 提高了代码的维护性 让类与类之间产生了关系，是多态的前提 继承的弊端：类的耦合性很强\n设计原则：低耦合，高内聚。\n耦合：类与类的关系。 内聚：自己完成事情的能力。 ","content_html":" 引用 继承的好处：\n提高了代码的复用性 提高了代码的维护性 让类与类之间产生了关系，是多态的前提 继承的弊端：类的耦合性很强\n设计原则：低耦合，高内聚。\n耦合：类与类的关系。 内聚：自己完成事情的能力。 "},{"title":"Arrays 类及基本使用","date_published":"2019-01-18T13:13:10Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-arrays/","url":"https://lruihao.cn/posts/java-arrays/","tags":["Java","Collator","Comparator"],"summary":"1 主要方法 static type[] copyof(type[] original,int length) static int binarysearch(type[] a,type key) static boolean equals(type[] a,type[] b) static void fill(type[] a,type val) static void fill(type[] a,int fromindex,int toindex,type val) static void sort(type[] a) ","content_html":"1 主要方法 static type[] copyof(type[] original,int length) static int binarysearch(type[] a,type key) static boolean equals(type[] a,type[] b) static void fill(type[] a,type val) static void fill(type[] a,int fromindex,int toindex,type val) static void sort(type[] a) "},{"title":"java 猜数字小游戏（Math 类）","date_published":"2019-01-15T17:33:28Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/mathclass/","url":"https://lruihao.cn/posts/mathclass/","tags":["Java"],"summary":" 大一刚学 c 的时候以前写过 c 语言版 的。\nMath: 针对数学进行运算的类 特点：没有构造方法，因为它的成员都是静态的 产生随机数： public static double random(): 产生随机数，范围 [0.0,1.0) 产生 1-100 之间的随机数 int number = (int)(Math.random()*100)+1; 猜数字小游戏案例 ","content_html":" 大一刚学 c 的时候以前写过 c 语言版 的。\nMath: 针对数学进行运算的类 特点：没有构造方法，因为它的成员都是静态的 产生随机数： public static double random(): 产生随机数，范围 [0.0,1.0) 产生 1-100 之间的随机数 int number = (int)(Math.random()*100)+1; 猜数字小游戏案例 "},{"title":"面向对象基础知识总结","date_published":"2019-01-15T16:07:31Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/duixiang/","url":"https://lruihao.cn/posts/duixiang/","tags":["面向对象","Java"],"summary":"1 面向对象思想（理解） 面向对象是基于面向过程的一种编程思想 思想特点： A: 是一种更符合我们思考习惯的思想 B: 把复杂的问题简单化 C: 让我们从执行者变成了指挥者 举例： A: 洗衣服 B: 吃饭 C: 买电脑 举例并代码体现 把大象装进冰箱 2 类与对象（掌握） 我们学习编程是为了把现实世界的事物用编程语言描述来实现信息化。 现实世界事物是如","content_html":"1 面向对象思想（理解） 面向对象是基于面向过程的一种编程思想 思想特点： A: 是一种更符合我们思考习惯的思想 B: 把复杂的问题简单化 C: 让我们从执行者变成了指挥者 举例： A: 洗衣服 B: 吃饭 C: 买电脑 举例并代码体现 把大象装进冰箱 2 类与对象（掌握） 我们学习编程是为了把现实世界的事物用编程语言描述来实现信息化。 现实世界事物是如"},{"title":"java 水仙花数（循环）","date_published":"2019-01-14T17:30:24Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-range/","url":"https://lruihao.cn/posts/java-range/","tags":["水仙花数","Java"],"summary":" 水仙花数（Narcissistic number）也被称为超完全数字不变数（pluperfect digital invariant, PPDI）、自恋数、自幂数、阿姆斯壮数或阿姆斯特朗数（Armstrong number），水仙花数是指一个 3 位数，它的每个位上的数字的 3 次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。\n","content_html":" 水仙花数（Narcissistic number）也被称为超完全数字不变数（pluperfect digital invariant, PPDI）、自恋数、自幂数、阿姆斯壮数或阿姆斯特朗数（Armstrong number），水仙花数是指一个 3 位数，它的每个位上的数字的 3 次幂之和等于它本身（例如：1^3 + 5^3+ 3^3 = 153）。\n"},{"title":"java 录入数据","date_published":"2019-01-14T15:33:46Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/java-input/","url":"https://lruihao.cn/posts/java-input/","tags":["Java"],"summary":"1 记忆格式 (1) 导包： import java.util.Scanner; 注意：位置在 class 的上面。 (2) 创建键盘录入对象： Scanner sc = new Scanner(System.in); (3) 获取数据 int i = sc.nextInt(); (4) 练习： A: 求两个数据的和 B: 获取两个数据中较大的值 C: 获取三个数据中较大的值 D: 比较两个数是否相等 2 实例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package helloworld; import java.util.Scanner; public class helloworld { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int i=sc.nextInt(),j=sc.nextInt(),k=sc.nextInt(); sc.close(); System.out.println(i+\u0026#34;+\u0026#34;+j+\u0026#34;=\u0026#34;+(i+j)); System.out.println(\u0026#34;MAXij=\u0026#34;+Max(i,j)); System.out.println(\u0026#34;MAXijk=\u0026#34;+Max(i,j,k));","content_html":"1 记忆格式 (1) 导包： import java.util.Scanner; 注意：位置在 class 的上面。 (2) 创建键盘录入对象： Scanner sc = new Scanner(System.in); (3) 获取数据 int i = sc.nextInt(); (4) 练习： A: 求两个数据的和 B: 获取两个数据中较大的值 C: 获取三个数据中较大的值 D: 比较两个数是否相等 2 实例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package helloworld; import java.util.Scanner; public class helloworld { public static void main(String[] args) { Scanner sc = new Scanner(System.in); int i=sc.nextInt(),j=sc.nextInt(),k=sc.nextInt(); sc.close(); System.out.println(i+\u0026#34;+\u0026#34;+j+\u0026#34;=\u0026#34;+(i+j)); System.out.println(\u0026#34;MAXij=\u0026#34;+Max(i,j)); System.out.println(\u0026#34;MAXijk=\u0026#34;+Max(i,j,k));"},{"title":"java 标识符","date_published":"2019-01-14T15:07:57Z","date_modified":"2023-12-08T20:26:13&#43;08:00","id":"https://lruihao.cn/posts/biaoshi/","url":"https://lruihao.cn/posts/biaoshi/","tags":["Java"],"summary":"1 标识符 给类，接口，方法或者变量起名字的符号 2 组成规则 A: 英文字母大小写 B: 数字 C:_和$ 3 注意事项 A: 不能以数字开头 B: 不能是 Java 中的关键字 C: 区分大小写 Student,student 这是两个名称 4 常见命名方式 A: 包 其实就是文件夹，用于解决相同类名问题 全部小写 单级：com 多级：cn.itcast B: 类或者接口 一个单词：首字母大写 Student,Person,Teacher 多个单词：","content_html":"1 标识符 给类，接口，方法或者变量起名字的符号 2 组成规则 A: 英文字母大小写 B: 数字 C:_和$ 3 注意事项 A: 不能以数字开头 B: 不能是 Java 中的关键字 C: 区分大小写 Student,student 这是两个名称 4 常见命名方式 A: 包 其实就是文件夹，用于解决相同类名问题 全部小写 单级：com 多级：cn.itcast B: 类或者接口 一个单词：首字母大写 Student,Person,Teacher 多个单词："}]}