{"version":"https://jsonfeed.org/version/1.1","title":"ACM 分类 | 菠菜眾長","description":"Hugo FixIt 作者，喜欢瞎折腾、造轮子、写东西，分享一些前端开发中的所见、所闻、所思。","home_page_url":"https://lruihao.cn/","feed_url":"https://lruihao.cn/categories/acm/feed.json","language":"zh-CN","icon":"https://lruihao.cn/apple-touch-icon.png","favicon":"https://lruihao.cn/favicon.ico","author":{"name":"Lruihao","url":"https://github.com/Lruihao","avatar":"https://lruihao.cn/images/avatar.jpg"},"items":[{"title":"最大公约数（二进制算法）","date_published":"2019-05-17T09:14:16Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/gcd-bit/","url":"https://lruihao.cn/posts/gcd-bit/","tags":["欧几里得","数学","数论","C"],"summary":" 二进制最大公约数算法避免了欧几里得算法（辗转相除法）的大量取模操作，有效减少了时间消耗，且更为方便。\n","content_html":" 二进制最大公约数算法避免了欧几里得算法（辗转相除法）的大量取模操作，有效减少了时间消耗，且更为方便。\n"},{"title":"HDU 1009 FatMouse' Trade（贪心）","date_published":"2019-04-12T16:43:19Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/hdu1009/","url":"https://lruihao.cn/posts/hdu1009/","tags":["ACM","贪心","HDU"],"summary":"1 题目大意 题目链接 老鼠有 M 磅猫食 , 有 N 个房间 , 每个房间前有一只猫 , 房间里有老鼠最喜欢的食品 J[i] , 若要得到房间的食物 , 必须付出相应的猫食 F[i] , 当然这只老鼠没必要每次都付出所有的 F[i]，若它付出 F[i] 的 a%，则得到 J[i] 的 a%，求老鼠能吃到的最多的食物。 1.1 Sample Input 5 3 7 2 4 3 5 2 20 3 25 18 24 15 15 10 -1 -1 1.2 Sample Output 13.333 31.500 2 分析 老","content_html":"1 题目大意 题目链接 老鼠有 M 磅猫食 , 有 N 个房间 , 每个房间前有一只猫 , 房间里有老鼠最喜欢的食品 J[i] , 若要得到房间的食物 , 必须付出相应的猫食 F[i] , 当然这只老鼠没必要每次都付出所有的 F[i]，若它付出 F[i] 的 a%，则得到 J[i] 的 a%，求老鼠能吃到的最多的食物。 1.1 Sample Input 5 3 7 2 4 3 5 2 20 3 25 18 24 15 15 10 -1 -1 1.2 Sample Output 13.333 31.500 2 分析 老"},{"title":"百钱百鸡（枚举法）","date_published":"2019-03-30T10:13:33Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/bqbj/","url":"https://lruihao.cn/posts/bqbj/","tags":["ACM"],"summary":" 我国古代数学家张丘建在《算经》一书中提出的数学问题：鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱一。百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？\n","content_html":" 我国古代数学家张丘建在《算经》一书中提出的数学问题：鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱一。百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？\n"},{"title":"大数乘法","date_published":"2019-03-28T22:50:43Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/dacheng/","url":"https://lruihao.cn/posts/dacheng/","tags":["数学","大数运算","ACM","C"],"summary":" 大数乘法 c 版 (基础写法)\n","content_html":" 大数乘法 c 版 (基础写法)\n"},{"title":"石子阵列（组合数学）","date_published":"2018-08-10T22:11:00Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/nowcoder157a/","url":"https://lruihao.cn/posts/nowcoder157a/","tags":["数学","组合数学","ACM","Nowcoder","C++"],"summary":"链接：https://www.nowcoder.com/acm/contest/157/A 来源：牛客网 1 题目描述 xb 有 m 种石子，每种无限个，Ta 想从这些石子中取出 n 个，并按顺序排列起来，为了好看，相邻的石子不能相同。xb 想知道有多少种排列的方法。 2 输入描述 第一行有两个正整数 n，m。 3 输出描述 第一行一个","content_html":"链接：https://www.nowcoder.com/acm/contest/157/A 来源：牛客网 1 题目描述 xb 有 m 种石子，每种无限个，Ta 想从这些石子中取出 n 个，并按顺序排列起来，为了好看，相邻的石子不能相同。xb 想知道有多少种排列的方法。 2 输入描述 第一行有两个正整数 n，m。 3 输出描述 第一行一个"},{"title":"Dreamoon and Stairs","date_published":"2018-08-10T20:13:08Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/codeforces476a/","url":"https://lruihao.cn/posts/codeforces476a/","tags":["Codeforces","ACM","数学","C++","C"],"summary":"题目链接 Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. What is the minimal number of moves making him climb to the top of the stairs that satisfies his condition? 1 Input The single line contains two space separated integers n, m (0 \u0026lt; n ≤ 10000, 1 \u0026lt; m ≤ 10). 2 Output Print a single integer — the minimal number of moves being a multiple of m. If there is no way he can climb satisfying condition print - 1 instead. 3 Examples 3.1 input1 10 2 3.2 output1 6 3.3 input2 3 5 3.4 output2 -1 3.5 Note For the first sample, Dreamoon could climb in 6 moves with following sequence of steps: {2, 2, 2, 2, 1, 1}.","content_html":"题目链接 Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. What is the minimal number of moves making him climb to the top of the stairs that satisfies his condition? 1 Input The single line contains two space separated integers n, m (0 \u0026lt; n ≤ 10000, 1 \u0026lt; m ≤ 10). 2 Output Print a single integer — the minimal number of moves being a multiple of m. If there is no way he can climb satisfying condition print - 1 instead. 3 Examples 3.1 input1 10 2 3.2 output1 6 3.3 input2 3 5 3.4 output2 -1 3.5 Note For the first sample, Dreamoon could climb in 6 moves with following sequence of steps: {2, 2, 2, 2, 1, 1}."},{"title":"Dreamoon and WiFi（组合数学）","date_published":"2018-08-10T17:44:47Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/codeforces476b/","url":"https://lruihao.cn/posts/codeforces476b/","tags":["组合数学","Codeforces","ACM","数学","C++","C"],"summary":"题目链接 1 题目大意 就是给定两个字符串，第一个字符串由\u0026quot;+\u0026quot;,\u0026quot;-\u0026ldquo;组成，第二个字符串由\u0026rdquo;+\u0026quot;,\u0026quot;-\u0026quot;,\u0026quot;?\u0026ldquo;组成，“+”代表加 1，\u0026rdquo;-\u0026ldquo;代表减一，“?\u0026ldquo;代表可","content_html":"题目链接 1 题目大意 就是给定两个字符串，第一个字符串由\u0026quot;+\u0026quot;,\u0026quot;-\u0026ldquo;组成，第二个字符串由\u0026rdquo;+\u0026quot;,\u0026quot;-\u0026quot;,\u0026quot;?\u0026ldquo;组成，“+”代表加 1，\u0026rdquo;-\u0026ldquo;代表减一，“?\u0026ldquo;代表可"},{"title":"The equation-SGU106（扩展欧几里得）","date_published":"2018-08-10T10:32:39Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/euclid/","url":"https://lruihao.cn/posts/euclid/","tags":["数学","数论","ACM","欧几里得","他山之石","C++","C"],"summary":"1 题意 给出 a,b,c,x1,x2,y1,y2，求满足 ax+by+c=0，且 x∈[x1,x2],y∈[y1,y2] 的整数解个数。 2 分析 对于解二元一次不定方程，容易想到利用扩展欧几里得求出一组可行解后找到通解，下面来介绍一下欧几里得以及扩展欧几里得。 2.1 欧几里得 又名辗转相除法，是用来计算两个数的最大公约数","content_html":"1 题意 给出 a,b,c,x1,x2,y1,y2，求满足 ax+by+c=0，且 x∈[x1,x2],y∈[y1,y2] 的整数解个数。 2 分析 对于解二元一次不定方程，容易想到利用扩展欧几里得求出一组可行解后找到通解，下面来介绍一下欧几里得以及扩展欧几里得。 2.1 欧几里得 又名辗转相除法，是用来计算两个数的最大公约数"},{"title":"Leading and Trailing-lightoj1282（快速幂 + 对数运算）","date_published":"2018-08-09T20:55:26Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/lightoj1282/","url":"https://lruihao.cn/posts/lightoj1282/","tags":["数论","数学","快速幂","ACM","C"],"summary":"1 题目链接 2 题目大意 给定两个数 n,k 求 n^k 的前三位和最后三位。\n3 分析 求后三位的话：直接快速幂，对 1000 取模就好了。\n求前三位，对于给定的一个数 n, 它可以写成 n=10^a, 其中这个 a 为浮点数，则t=n^k=(10^a)^k=10^a*k=(10^x)*(10^y);其中 x,y 分别是a*k的整数部分和小数部分，对于 t=n^k 这个数，它的位数由 (10^x) 决定，它的位数上的值则有 (10^y) 决定，因此我们要求 t 的前三位，只需要将 10^y 求出，在乘以 100，就得到了它的前三位。\n分析完，我们再整体看，设 n^k=10^z; 那么z=k*log10(n)\nfmod(z,1)可以求出 x 的小数部分。\n","content_html":"1 题目链接 2 题目大意 给定两个数 n,k 求 n^k 的前三位和最后三位。\n3 分析 求后三位的话：直接快速幂，对 1000 取模就好了。\n求前三位，对于给定的一个数 n, 它可以写成 n=10^a, 其中这个 a 为浮点数，则t=n^k=(10^a)^k=10^a*k=(10^x)*(10^y);其中 x,y 分别是a*k的整数部分和小数部分，对于 t=n^k 这个数，它的位数由 (10^x) 决定，它的位数上的值则有 (10^y) 决定，因此我们要求 t 的前三位，只需要将 10^y 求出，在乘以 100，就得到了它的前三位。\n分析完，我们再整体看，设 n^k=10^z; 那么z=k*log10(n)\nfmod(z,1)可以求出 x 的小数部分。\n"},{"title":"Codeforces Round 502(Div.1 + Div.2)","date_published":"2018-08-09T10:48:00Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/cfcontest1017/","url":"https://lruihao.cn/posts/cfcontest1017/","tags":["ACM","Codeforces","组合数学","C++"],"summary":"0.1 A. The Rank 题目大意：\n给出 n 个学生的成绩，Thomas Smith 的成绩是第一行，然后要按总成绩进行排序，总分相同的按编号从小到大排；\n开始看还以为要写 sort 的 cmp 函数进行多条件排序，敲完才发现其实只要按总分就可以了，因为托马斯的 id 是一，必然会排在前面。\n","content_html":"0.1 A. The Rank 题目大意：\n给出 n 个学生的成绩，Thomas Smith 的成绩是第一行，然后要按总成绩进行排序，总分相同的按编号从小到大排；\n开始看还以为要写 sort 的 cmp 函数进行多条件排序，敲完才发现其实只要按总分就可以了，因为托马斯的 id 是一，必然会排在前面。\n"},{"title":"欧拉函数","date_published":"2018-08-08T17:10:07Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/euler/","url":"https://lruihao.cn/posts/euler/","tags":["数学","数论","euler","C"],"summary":"1 欧拉函数是求小于 x 并且和 x互质 的数的个数 通式：φ(x)=x(1-1/p1)(1-1/p2)(1-1/p3)(1-1/p4)…..(1-1/pn)\n其中 p1, p2……pn 为 x 的所有质因数，x 是不为 0 的整数\nφ(1)=1（唯一和 1 互质的数就是 1 本身）【注意：每种质因数只一个。比如 12=223】\n2 定理 若 n 是素数 p 的 k 次幂，φ(n)=p^k-p^(k-1)=(p-1)p^(k-1)，因为除了 p 的倍数外，其他数都跟 n 互质 欧拉函数是积性函数——若 m,n 互质，φ(mn)=φ(m)φ(n) 3 特殊性质 当 n 为奇数时，φ(2n)=φ(n) p 是素数，φ(p) = p - 1，φ(p) 称为 p 的欧拉值 若 a 为素数，b mod a=0,φ(a*b)=φ(b)*a ","content_html":"1 欧拉函数是求小于 x 并且和 x互质 的数的个数 通式：φ(x)=x(1-1/p1)(1-1/p2)(1-1/p3)(1-1/p4)…..(1-1/pn)\n其中 p1, p2……pn 为 x 的所有质因数，x 是不为 0 的整数\nφ(1)=1（唯一和 1 互质的数就是 1 本身）【注意：每种质因数只一个。比如 12=223】\n2 定理 若 n 是素数 p 的 k 次幂，φ(n)=p^k-p^(k-1)=(p-1)p^(k-1)，因为除了 p 的倍数外，其他数都跟 n 互质 欧拉函数是积性函数——若 m,n 互质，φ(mn)=φ(m)φ(n) 3 特殊性质 当 n 为奇数时，φ(2n)=φ(n) p 是素数，φ(p) = p - 1，φ(p) 称为 p 的欧拉值 若 a 为素数，b mod a=0,φ(a*b)=φ(b)*a "},{"title":"Heavy Transportation-poj1797(dijkstra 或最大生成树）","date_published":"2018-08-06T09:42:11Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/poj1797/","url":"https://lruihao.cn/posts/poj1797/","tags":["ACM","POJ","最短路","C++"],"summary":"题目链接\n大意：\n要从城市 1 到城市 N 运送货物，有 M 条道路，每条道路都有它的最大载重量，问从城市 1 到城市 N 运送最多的重量是多少。\n其实题意很简单，就是找一条 1\u0026ndash;\u0026gt;N 的路径，在不超过每条路径的最大载重量的情况下，使得运送的货物最多。一条路径上的最大载重量为这个路径上权值最小的边； ","content_html":"题目链接\n大意：\n要从城市 1 到城市 N 运送货物，有 M 条道路，每条道路都有它的最大载重量，问从城市 1 到城市 N 运送最多的重量是多少。\n其实题意很简单，就是找一条 1\u0026ndash;\u0026gt;N 的路径，在不超过每条路径的最大载重量的情况下，使得运送的货物最多。一条路径上的最大载重量为这个路径上权值最小的边； "},{"title":"Til the Cows Come Home-poj2387(dijkstra 判断重边）","date_published":"2018-08-03T21:40:33Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/poj2387/","url":"https://lruihao.cn/posts/poj2387/","tags":["ACM","最短路","C++","C"],"summary":"题目链接 题目大意： 说的是，一只奶牛位于 N 号节点，输入 N 个节点和 T 对双向的边，求出由 N 到 1 的最短的距离，其实就是问的单源最短路问题。 两个点可能有多条路，选择最短的。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; #include\u0026lt;algorithm\u0026gt; using namespace std; const int INF=99999999; //设为无穷","content_html":"题目链接 题目大意： 说的是，一只奶牛位于 N 号节点，输入 N 个节点和 T 对双向的边，求出由 N 到 1 的最短的距离，其实就是问的单源最短路问题。 两个点可能有多条路，选择最短的。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; #include\u0026lt;algorithm\u0026gt; using namespace std; const int INF=99999999; //设为无穷"},{"title":"最短路入门","date_published":"2018-08-03T16:27:16Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/zuiduanlu/","url":"https://lruihao.cn/posts/zuiduanlu/","tags":["最短路","ACM"],"summary":"1 Dijkstra 算法 1.1 1. 定义概览 Dijkstra（迪杰斯特拉）算法是典型的单源最短路径算法，用于计算一个节点到其他所有节点的最短路径。主要特点是以起始点为中心向外层层扩展，直到扩展到终点为止。Dijkstra 算法是很有代表性的最短路径算法，在很多专业课程中都作为基本内容有详细的介绍，如数据结构，图论，运筹学等等","content_html":"1 Dijkstra 算法 1.1 1. 定义概览 Dijkstra（迪杰斯特拉）算法是典型的单源最短路径算法，用于计算一个节点到其他所有节点的最短路径。主要特点是以起始点为中心向外层层扩展，直到扩展到终点为止。Dijkstra 算法是很有代表性的最短路径算法，在很多专业课程中都作为基本内容有详细的介绍，如数据结构，图论，运筹学等等"},{"title":"牛客暑假多校第五场","date_published":"2018-08-02T21:27:02Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/nowcodersummer-5th/","url":"https://lruihao.cn/posts/nowcodersummer-5th/","tags":["Nowcoder","ACM","C++"],"summary":"题目链接 密码：l9sn\n终于不爆零了，但是还是 wa 了无数次，有时候代码感觉都差不多\n","content_html":"题目链接 密码：l9sn\n终于不爆零了，但是还是 wa 了无数次，有时候代码感觉都差不多\n"},{"title":"食物链-poj1182（带权并查集经典模板）","date_published":"2018-08-02T11:10:37Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/poj1182/","url":"https://lruihao.cn/posts/poj1182/","tags":["ACM","并查集","POJ","C++","C"],"summary":"题目链接\n思路参考 1,思路参考 2（没看懂）\n","content_html":"题目链接\n思路参考 1,思路参考 2（没看懂）\n"},{"title":"小希的迷宫-HDU-1272（并查集 or 树性质）","date_published":"2018-08-01T21:45:50Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/hdu1272/","url":"https://lruihao.cn/posts/hdu1272/","tags":["ACM","并查集","HDU","C++","C"],"summary":"1 题目链接：小希的迷宫 2 并查集 无回路 单连通 并查集做，首先想到的是判断两个点是否连通，不连通就合并，已连通的话说明会形成回路，则可以判定 No，交了一发错了。\n想了一下没有考虑到多个连通域的情况，该题必须只有一个连通域\n3 树的性质 既然单连通无回路，则这肯定是一棵树；那么 edge=v-1;\n","content_html":"1 题目链接：小希的迷宫 2 并查集 无回路 单连通 并查集做，首先想到的是判断两个点是否连通，不连通就合并，已连通的话说明会形成回路，则可以判定 No，交了一发错了。\n想了一下没有考虑到多个连通域的情况，该题必须只有一个连通域\n3 树的性质 既然单连通无回路，则这肯定是一棵树；那么 edge=v-1;\n"},{"title":"How Many Answers Are Wrong-hdu3038（带权并查集）","date_published":"2018-08-01T11:45:53Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/hdu3038/","url":"https://lruihao.cn/posts/hdu3038/","tags":["并查集","ACM","HDU","C++"],"summary":"题目链接：How Many Answers Are Wrong\n思路参考：本题直接参考,图文解释\n","content_html":"题目链接：How Many Answers Are Wrong\n思路参考：本题直接参考,图文解释\n"},{"title":"Bear and Finding Criminals-Codeforces680B","date_published":"2018-07-31T19:32:21Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/codeforces680b/","url":"https://lruihao.cn/posts/codeforces680b/","tags":["Codeforces","ACM","C++"],"summary":"题目链接：Bear and Finding Criminals\n大致题意就是小熊警察住在某个城市，他要抓各个城市的罪犯，现在用一个 BCD 可以知道那个城市里一定有罪犯。\n一定能确定该城市有小偷的几种情况：\n警察所住城市有罪犯，则一定能检测到\n警察所住城市的左边和右边位置若都不为 0，则说明两座城市都有罪犯（只有一边为 1 是不能确定到底哪个城市有罪犯的）\n警察所在城市的一边检测到有罪犯，但在另一边已经没有城市了，则说明该城市一定有罪犯\n","content_html":"题目链接：Bear and Finding Criminals\n大致题意就是小熊警察住在某个城市，他要抓各个城市的罪犯，现在用一个 BCD 可以知道那个城市里一定有罪犯。\n一定能确定该城市有小偷的几种情况：\n警察所住城市有罪犯，则一定能检测到\n警察所住城市的左边和右边位置若都不为 0，则说明两座城市都有罪犯（只有一边为 1 是不能确定到底哪个城市有罪犯的）\n警察所在城市的一边检测到有罪犯，但在另一边已经没有城市了，则说明该城市一定有罪犯\n"},{"title":"Bear and Five Cards-Codeforces680A","date_published":"2018-07-31T19:22:36Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/codeforces680a/","url":"https://lruihao.cn/posts/codeforces680a/","tags":["Codeforces","ACM","C++"],"summary":"题目链接：Bear and Five Cards\n大致题意就是小熊有 5 张卡片，每张卡片有对应的分数，他可以选择丢弃 2 张相同的或者 3 张相同的卡片，没有相同的就无法丢弃，问小熊剩下的分数最少是多少。\n","content_html":"题目链接：Bear and Five Cards\n大致题意就是小熊有 5 张卡片，每张卡片有对应的分数，他可以选择丢弃 2 张相同的或者 3 张相同的卡片，没有相同的就无法丢弃，问小熊剩下的分数最少是多少。\n"},{"title":"how many tables-HDU-1213（并查集求连通域数目）","date_published":"2018-07-31T11:12:10Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/how-tables/","url":"https://lruihao.cn/posts/how-tables/","tags":["并查集","HDU","C++","ACM"],"summary":"并查集求连通域数目，初始化 sum=n； 题目链接： how many tables\n","content_html":"并查集求连通域数目，初始化 sum=n； 题目链接： how many tables\n"},{"title":"The-suspects-POJ-1611（并查集）","date_published":"2018-07-31T11:11:31Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/poj-1611/","url":"https://lruihao.cn/posts/poj-1611/","tags":["并查集","POJ","ACM","C","C++"],"summary":"1 题目链接：The-suspects 2 翻译 警察抓贩毒集团。有不同类型的犯罪集团，人员可能重复，集团内的人会相互接触。现在警察在其中一人（0 号）身上搜出毒品，认为与这个人直接接触或通过其他人有间接接触的人都是嫌疑犯。问包括 0 号犯人共有多少嫌疑犯？\n","content_html":"1 题目链接：The-suspects 2 翻译 警察抓贩毒集团。有不同类型的犯罪集团，人员可能重复，集团内的人会相互接触。现在警察在其中一人（0 号）身上搜出毒品，认为与这个人直接接触或通过其他人有间接接触的人都是嫌疑犯。问包括 0 号犯人共有多少嫌疑犯？\n"},{"title":"wireless network-POJ-2236（并查集）","date_published":"2018-07-31T11:10:54Z","date_modified":"2024-07-07T14:04:22&#43;08:00","id":"https://lruihao.cn/posts/poj-2236/","url":"https://lruihao.cn/posts/poj-2236/","tags":["并查集","ACM","POJ","C++","C"],"summary":"1 题目链接：wireless network 2 翻译 ","content_html":"1 题目链接：wireless network 2 翻译 "},{"title":"Piles-with-stones","date_published":"2018-07-31T11:09:31Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/piles-with-stones/","url":"https://lruihao.cn/posts/piles-with-stones/","tags":["ACM","Codeforces","C++"],"summary":"Codeforces Round #500 (Div. 2)\n题目链接：Piles With Stones\n","content_html":"Codeforces Round #500 (Div. 2)\n题目链接：Piles With Stones\n"},{"title":"畅通工程-HDU-1232（并查集经典模板）","date_published":"2018-07-31T11:08:43Z","date_modified":"2018-07-31T11:08:43Z","id":"https://lruihao.cn/posts/%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B/","url":"https://lruihao.cn/posts/%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B/","tags":["ACM","并查集","HDU","C++","C"],"summary":"1 并查集入门推荐：超有爱的并查集~ 2 题目链接：畅通工程 3 题意分析 首先在地图上给你若干个城镇，这些城镇都可以看作点，然后告诉你哪些对城镇之间是有道路直接相连的。最后要解决的是整幅图的连通性问题。比如随意给你两个点，让你判断它们是否连通，或者问你整幅图一共有几个连通分支，也就是被分成了几个互相独立的块。像畅通工程这题，问还需要修几条路，实质就是求有几个连通分支。\n","content_html":"1 并查集入门推荐：超有爱的并查集~ 2 题目链接：畅通工程 3 题意分析 首先在地图上给你若干个城镇，这些城镇都可以看作点，然后告诉你哪些对城镇之间是有道路直接相连的。最后要解决的是整幅图的连通性问题。比如随意给你两个点，让你判断它们是否连通，或者问你整幅图一共有几个连通分支，也就是被分成了几个互相独立的块。像畅通工程这题，问还需要修几条路，实质就是求有几个连通分支。\n"},{"title":"牛客练习赛 23","date_published":"2018-07-27T21:56:08Z","date_modified":"2018-07-27T21:56:08Z","id":"https://lruihao.cn/posts/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B23/","url":"https://lruihao.cn/posts/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B23/","tags":["Nowcoder","ACM","C++","C"],"summary":"两题水过，暴力，找规律。\n1 托米的赌球 2 托米的划分 ","content_html":"两题水过，暴力，找规律。\n1 托米的赌球 2 托米的划分 "},{"title":"HDU-1495-非常可乐（bfs 模拟倒水 or 数论）","date_published":"2018-07-24T15:34:00Z","date_modified":"2018-07-24T15:34:00Z","id":"https://lruihao.cn/posts/hdu-1495/","url":"https://lruihao.cn/posts/hdu-1495/","tags":["ACM","HDU","搜索","C++"],"summary":"非常可乐 大家一定觉的运动以后喝可乐是一件很惬意的事情，但是 seeyou 却不这么认为。因为每次当 seeyou 买了可乐以后，阿牛就要求和 seeyou 一起分享这一瓶可乐，而且一定要喝的和 seeyou 一样多。但 seeyou 的手中只有两个杯子，它们的容量分别是 N 毫升和 M 毫升 可乐的体积为 S（S\u0026lt;101）毫升（正好装满一瓶） ，它们三个之间可以相互倒可乐（都","content_html":"非常可乐 大家一定觉的运动以后喝可乐是一件很惬意的事情，但是 seeyou 却不这么认为。因为每次当 seeyou 买了可乐以后，阿牛就要求和 seeyou 一起分享这一瓶可乐，而且一定要喝的和 seeyou 一样多。但 seeyou 的手中只有两个杯子，它们的容量分别是 N 毫升和 M 毫升 可乐的体积为 S（S\u0026lt;101）毫升（正好装满一瓶） ，它们三个之间可以相互倒可乐（都"},{"title":"hdu-2612-Find a way（双 bfs）","date_published":"2018-07-23T12:34:42Z","date_modified":"2018-07-23T12:34:42Z","id":"https://lruihao.cn/posts/hdu-2612/","url":"https://lruihao.cn/posts/hdu-2612/","tags":["ACM","HDU","搜索","C++"],"summary":"Find a way 圣诞节要到了，坤神和瑞瑞这对基佬想一起去召唤师大峡谷开开车。百度地图一下，发现周围的召唤师大峡谷还不少，这对基佬纠结着，该去哪一个。坤神：我要去左边的这个（因为离自己比较近 哈哈~）。瑞瑞：我要去右边的这个（因为离自己比较近 嘿嘿~） \u0026hellip;\u0026hellip;.. 这对基佬闹矛盾了，开车有危险了！为了不让他们去召唤师大峡谷坑人","content_html":"Find a way 圣诞节要到了，坤神和瑞瑞这对基佬想一起去召唤师大峡谷开开车。百度地图一下，发现周围的召唤师大峡谷还不少，这对基佬纠结着，该去哪一个。坤神：我要去左边的这个（因为离自己比较近 哈哈~）。瑞瑞：我要去右边的这个（因为离自己比较近 嘿嘿~） \u0026hellip;\u0026hellip;.. 这对基佬闹矛盾了，开车有危险了！为了不让他们去召唤师大峡谷坑人"},{"title":"POJ-3278-Catch That Cow(bfs)","date_published":"2018-07-22T12:10:32Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/poj-3278/","url":"https://lruihao.cn/posts/poj-3278/","tags":["BFS","ACM","搜索","POJ","C++"],"summary":"Farmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point N (0 ≤ N ≤ 100,000) on a number line and the cow is at a point K (0 ≤ K ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting. Walking: FJ can move from any point X to the points X\u0026quot;,\u0026ldquo;1 or X + 1 in a single minute Teleporting: FJ can move from any point X to the point 2 × X in a single minute. If the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it? 1 Input Line 1: Two space-separated integers: N and K 2 Output Line 1: The least amount of time, in minutes, it takes for Farmer John to catch","content_html":"Farmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point N (0 ≤ N ≤ 100,000) on a number line and the cow is at a point K (0 ≤ K ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting. Walking: FJ can move from any point X to the points X\u0026quot;,\u0026ldquo;1 or X + 1 in a single minute Teleporting: FJ can move from any point X to the point 2 × X in a single minute. If the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it? 1 Input Line 1: Two space-separated integers: N and K 2 Output Line 1: The least amount of time, in minutes, it takes for Farmer John to catch"},{"title":"poj-2251-Dungeon Master（三维 bfs 最短路）","date_published":"2018-07-22T12:02:32Z","date_modified":"2018-07-22T12:02:32Z","id":"https://lruihao.cn/posts/poj-2251/","url":"https://lruihao.cn/posts/poj-2251/","tags":["BFS","ACM","搜索","POJ","C++","C"],"summary":"英文原题链接 1 Description - 题目描述 你被困在一个三维的空间中，现在要寻找最短路径逃生！ 空间由立方体单位构成 你每次向上下前后左右移动一个单位需要一分钟 你不能对角线移动并且四周封闭 是否存在逃出生天的可能性？如果存在，则需要多少时间？ 2 Input - 输入 输入第一行是一个数表示空间的数量。 每个空间的描述的第一行为 L，R 和 C（皆","content_html":"英文原题链接 1 Description - 题目描述 你被困在一个三维的空间中，现在要寻找最短路径逃生！ 空间由立方体单位构成 你每次向上下前后左右移动一个单位需要一分钟 你不能对角线移动并且四周封闭 是否存在逃出生天的可能性？如果存在，则需要多少时间？ 2 Input - 输入 输入第一行是一个数表示空间的数量。 每个空间的描述的第一行为 L，R 和 C（皆"},{"title":"poj-1321 棋盘问题（dfs）","date_published":"2018-07-22T11:58:14Z","date_modified":"2018-07-22T11:58:14Z","id":"https://lruihao.cn/posts/poj-1321/","url":"https://lruihao.cn/posts/poj-1321/","tags":["DFS","ACM","搜索","POJ","C++"],"summary":"Time Limit: 1000MS Memory Limit: 10000K Total Submissions: 63659 Accepted: 30423 1 Description 在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放 k 个棋子的所有可行的摆放方案 C。 2 Input 输入含有多组测试数据。 每组数据的第一行是两个正整数，n k，用一个空格隔","content_html":"Time Limit: 1000MS Memory Limit: 10000K Total Submissions: 63659 Accepted: 30423 1 Description 在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放 k 个棋子的所有可行的摆放方案 C。 2 Input 输入含有多组测试数据。 每组数据的第一行是两个正整数，n k，用一个空格隔"},{"title":"poj-1426-Find The Multiple(dfs)","date_published":"2018-07-22T11:57:13Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/poj-1426/","url":"https://lruihao.cn/posts/poj-1426/","tags":["DFS","ACM","搜索","POJ","C++"],"summary":"1 Find The Multiple Time Limit: 1000MS Memory Limit: 10000K Total Submissions: 40713 Accepted: 17088 Special Judge 1.1 Description Given a positive integer n, write a program to find out a nonzero multiple m of n whose decimal representation contains only the digits 0 and 1. You may assume that n is not greater than 200 and there is a corresponding m containing no more than 100 decimal digits. 1.2 Input The input file may contain multiple test cases. Each line contains a value of n (1 \u0026lt;= n \u0026lt;= 200). A line containing a zero terminates the input. 1.3 Output For each value of n in the input print a line containing the corresponding value of m. The decimal representation of m must not contain more than 100 digits. If there are multiple solutions for a given value of n, any one of them is acceptable. 1.4 Sample Input","content_html":"1 Find The Multiple Time Limit: 1000MS Memory Limit: 10000K Total Submissions: 40713 Accepted: 17088 Special Judge 1.1 Description Given a positive integer n, write a program to find out a nonzero multiple m of n whose decimal representation contains only the digits 0 and 1. You may assume that n is not greater than 200 and there is a corresponding m containing no more than 100 decimal digits. 1.2 Input The input file may contain multiple test cases. Each line contains a value of n (1 \u0026lt;= n \u0026lt;= 200). A line containing a zero terminates the input. 1.3 Output For each value of n in the input print a line containing the corresponding value of m. The decimal representation of m must not contain more than 100 digits. If there are multiple solutions for a given value of n, any one of them is acceptable. 1.4 Sample Input"},{"title":"Adjacent Replacements","date_published":"2018-07-22T11:54:14Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/adjacent-replacements/","url":"https://lruihao.cn/posts/adjacent-replacements/","tags":["Codeforces","ACM","C++"],"summary":"A. Adjacent Replacements 第一次打 cf 就做出一道这样的找规律的题，打到自闭。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include\u0026lt;bits/stdc++.h\u0026gt; using namespace std; int main(){ int n,a[1001]; cin\u0026gt;\u0026gt;n; int i; int flag=0; for(i=0;i\u0026lt;n;i++){ cin\u0026gt;\u0026gt;a[i]; if(!(a[i]\u0026amp;1)) a[i]--; if(!flag) {cout\u0026lt;\u0026lt;a[i];flag=1;} else cout\u0026lt;\u0026lt;\u0026#34; \u0026#34;\u0026lt;\u0026lt;a[i]; } return 0; }","content_html":"A. Adjacent Replacements 第一次打 cf 就做出一道这样的找规律的题，打到自闭。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include\u0026lt;bits/stdc++.h\u0026gt; using namespace std; int main(){ int n,a[1001]; cin\u0026gt;\u0026gt;n; int i; int flag=0; for(i=0;i\u0026lt;n;i++){ cin\u0026gt;\u0026gt;a[i]; if(!(a[i]\u0026amp;1)) a[i]--; if(!flag) {cout\u0026lt;\u0026lt;a[i];flag=1;} else cout\u0026lt;\u0026lt;\u0026#34; \u0026#34;\u0026lt;\u0026lt;a[i]; } return 0; }"},{"title":"poj-3984-迷宫问题 (bfs 路径）","date_published":"2018-07-22T11:50:20Z","date_modified":"2018-07-22T11:50:20Z","id":"https://lruihao.cn/posts/poj-3984/","url":"https://lruihao.cn/posts/poj-3984/","tags":["BFS","ACM","POJ","C++","C"],"summary":"迷宫问题 Time Limit: 1000MS Memory Limit: 65536K Total Submissions: 32323 Accepted: 18471 1 Description 定义一个二维数组： int maze[5][5] = { 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, }; 它表示一个迷宫，其中的 1 表示墙壁，0 表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。 2 Input 一个 5 × 5 的二维数组，表示一个迷宫。数据保证有唯一解。 3 Output","content_html":"迷宫问题 Time Limit: 1000MS Memory Limit: 65536K Total Submissions: 32323 Accepted: 18471 1 Description 定义一个二维数组： int maze[5][5] = { 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, }; 它表示一个迷宫，其中的 1 表示墙壁，0 表示可以走的路，只能横着走或竖着走，不能斜着走，要求编程序找出从左上角到右下角的最短路线。 2 Input 一个 5 × 5 的二维数组，表示一个迷宫。数据保证有唯一解。 3 Output"},{"title":"Wannafly 挑战赛 20-染色","date_published":"2018-07-22T11:46:25Z","date_modified":"2018-07-22T11:46:25Z","id":"https://lruihao.cn/posts/wannafly-20/","url":"https://lruihao.cn/posts/wannafly-20/","tags":["ACM","Nowcoder","C++","C"],"summary":"链接：https://www.nowcoder.com/acm/contest/133/A 来源：牛客网 1 题目描述 现在有一棵被 Samsara-Karma 染了 k 种颜色的树，每种颜色有着不同的价值，Applese 觉得 Samsara-Karma 染的太难看了，于是打算把整棵树重新染成同一种颜色，但是，由于一些奥妙重重的原因，每一次染色 Applese 可以选择两个有边相连","content_html":"链接：https://www.nowcoder.com/acm/contest/133/A 来源：牛客网 1 题目描述 现在有一棵被 Samsara-Karma 染了 k 种颜色的树，每种颜色有着不同的价值，Applese 觉得 Samsara-Karma 染的太难看了，于是打算把整棵树重新染成同一种颜色，但是，由于一些奥妙重重的原因，每一次染色 Applese 可以选择两个有边相连"},{"title":"hdu-1241-Oil Deposits (dfs)","date_published":"2018-07-22T11:37:20Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/hdu-1241/","url":"https://lruihao.cn/posts/hdu-1241/","tags":["DFS","搜索","HDU","ACM","C++"],"summary":"1 Oil Deposits 翻译 Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 41406 Accepted Submission(s): 23977 1.1 Problem Description The GeoSurvComp geologic survey company is responsible for detecting underground oil deposits. GeoSurvComp works with one large rectangular region of land at a time, and creates a grid that divides the land into numerous square plots. It then analyzes each plot separately, using sensing equipment to determine whether or not the plot contains oil. A plot containing oil is called a pocket. If two pockets are adjacent, then they are part of the same oil deposit. Oil deposits can be quite large and may contain numerous pockets. Your job is to determine how many different oil deposits are contained in a grid. 1.2 Input The input file contains one or more grids. Each grid begins with a line containing m and n, the number of rows","content_html":"1 Oil Deposits 翻译 Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 41406 Accepted Submission(s): 23977 1.1 Problem Description The GeoSurvComp geologic survey company is responsible for detecting underground oil deposits. GeoSurvComp works with one large rectangular region of land at a time, and creates a grid that divides the land into numerous square plots. It then analyzes each plot separately, using sensing equipment to determine whether or not the plot contains oil. A plot containing oil is called a pocket. If two pockets are adjacent, then they are part of the same oil deposit. Oil deposits can be quite large and may contain numerous pockets. Your job is to determine how many different oil deposits are contained in a grid. 1.2 Input The input file contains one or more grids. Each grid begins with a line containing m and n, the number of rows"},{"title":"BFS 求最短路","date_published":"2018-07-22T11:31:05Z","date_modified":"2018-07-22T11:31:05Z","id":"https://lruihao.cn/posts/bfs%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF/","url":"https://lruihao.cn/posts/bfs%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF/","tags":["BFS","搜索","C++"],"summary":"假设有一个 n 行 m 列的迷宫，每个单位要么是空地（用 1 表示）要么是障碍物（用 0 表示）.\n如和找到从起点到终点的最短路径？利用 BFS 搜索，逐步计算出每个节点到起点的最短距离，\n以及最短路径每个节点的前一个节点。最终将生成一颗以起点为根的 BFS 树。此时 BFS 可以求出任意一点到起点的距离。\n","content_html":"假设有一个 n 行 m 列的迷宫，每个单位要么是空地（用 1 表示）要么是障碍物（用 0 表示）.\n如和找到从起点到终点的最短路径？利用 BFS 搜索，逐步计算出每个节点到起点的最短距离，\n以及最短路径每个节点的前一个节点。最终将生成一颗以起点为根的 BFS 树。此时 BFS 可以求出任意一点到起点的距离。\n"},{"title":"Educational Codeforces Round 47 (Rated for Div. 2)","date_published":"2018-07-22T11:25:56Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/cf-1009/","url":"https://lruihao.cn/posts/cf-1009/","tags":["Codeforces","ACM","C++","C"],"summary":"那天晚上报名了没打，第二天早上打的，也只出了两题。 1 A. Game Shopping 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include\u0026lt;iostream\u0026gt; using namespace std; int main(){ int n,m,s=0; cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m; int i,j; int c[1000],a[1000]; for(i=0;i\u0026lt;n;i++) cin\u0026gt;\u0026gt;c[i]; for(i=0;i\u0026lt;m;i++) cin\u0026gt;\u0026gt;a[i]; for(i=0,j=0;i\u0026lt;n;){ if(j==m) break; if(c[i]\u0026lt;=a[j]){ s++; j++; i++; } else i++; } if(i==n\u0026amp;\u0026amp;s==0) cout\u0026lt;\u0026lt;\u0026#34;0\\n\u0026#34;; else cout\u0026lt;\u0026lt;s\u0026lt;\u0026lt;endl; return 0; } 2 B. Minimum Ternary String 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; string s, ans; int main(){ cin \u0026gt;\u0026gt; s;","content_html":"那天晚上报名了没打，第二天早上打的，也只出了两题。 1 A. Game Shopping 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include\u0026lt;iostream\u0026gt; using namespace std; int main(){ int n,m,s=0; cin\u0026gt;\u0026gt;n\u0026gt;\u0026gt;m; int i,j; int c[1000],a[1000]; for(i=0;i\u0026lt;n;i++) cin\u0026gt;\u0026gt;c[i]; for(i=0;i\u0026lt;m;i++) cin\u0026gt;\u0026gt;a[i]; for(i=0,j=0;i\u0026lt;n;){ if(j==m) break; if(c[i]\u0026lt;=a[j]){ s++; j++; i++; } else i++; } if(i==n\u0026amp;\u0026amp;s==0) cout\u0026lt;\u0026lt;\u0026#34;0\\n\u0026#34;; else cout\u0026lt;\u0026lt;s\u0026lt;\u0026lt;endl; return 0; } 2 B. Minimum Ternary String 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; string s, ans; int main(){ cin \u0026gt;\u0026gt; s;"},{"title":"TaoTao 要吃鸡","date_published":"2018-07-22T10:55:21Z","date_modified":"2018-07-22T10:55:21Z","id":"https://lruihao.cn/posts/taotao%E8%A6%81%E5%90%83%E9%B8%A1/","url":"https://lruihao.cn/posts/taotao%E8%A6%81%E5%90%83%E9%B8%A1/","tags":["背包问题","Nowcoder","C++"],"summary":"2018 年全国多校算法寒假训练营练习比赛（第二场）B(0 1 背包变化 特殊处理一个物品） 链接：https://www.nowcoder.com/acm/contest/74/B 来源：牛客网 1 题目描述 Taotao 的电脑带不动绝地求生，所以 taotao 只能去玩 pc 版的荒野行动了，和绝地求生一样，游戏人物本身可以携带一定重量 m 的物品，装","content_html":"2018 年全国多校算法寒假训练营练习比赛（第二场）B(0 1 背包变化 特殊处理一个物品） 链接：https://www.nowcoder.com/acm/contest/74/B 来源：牛客网 1 题目描述 Taotao 的电脑带不动绝地求生，所以 taotao 只能去玩 pc 版的荒野行动了，和绝地求生一样，游戏人物本身可以携带一定重量 m 的物品，装"},{"title":"杨辉三角","date_published":"2018-07-22T11:41:15&#43;08:00","date_modified":"2021-09-26T12:04:42Z","id":"https://lruihao.cn/posts/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/","url":"https://lruihao.cn/posts/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/","tags":["数学","杨辉三角"],"summary":"百度知道 1\n1 1\n1 2 1\n1 3 3 1\n1 4 6 4 1\n1 5 10 10 5 1\n1 6 15 20 15 6 1\n","content_html":"百度知道 1\n1 1\n1 2 1\n1 3 3 1\n1 4 6 4 1\n1 5 10 10 5 1\n1 6 15 20 15 6 1\n"},{"title":"深搜广搜","date_published":"2018-07-22T11:25:14&#43;08:00","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/dfs_bfs/","url":"https://lruihao.cn/posts/dfs_bfs/","tags":["ACM","BFS","DFS","搜索","C","C++"],"summary":"0.1 广度优先搜索（BFS） 广度优先搜索在进一步遍历图中顶点之前，先访问当前顶点的所有邻接结点。访问了就入队。 0.2 深度优先搜索（DFS） 深度优先搜索在搜索过程中访问某个顶点后，需要递归地访问此顶点的所有未访问过的相邻顶点。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42","content_html":"0.1 广度优先搜索（BFS） 广度优先搜索在进一步遍历图中顶点之前，先访问当前顶点的所有邻接结点。访问了就入队。 0.2 深度优先搜索（DFS） 深度优先搜索在搜索过程中访问某个顶点后，需要递归地访问此顶点的所有未访问过的相邻顶点。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42"},{"title":"Wannafly 挑战赛 18-序列","date_published":"2018-07-18T08:40:21Z","date_modified":"2018-07-18T08:40:21Z","id":"https://lruihao.cn/posts/wannafly-18/","url":"https://lruihao.cn/posts/wannafly-18/","tags":["组合数学","ACM","Nowcoder","C++","C"],"summary":"时间限制：C/C++ 1 秒，其他语言 2 秒 空间限制：C/C++ 262144K，其他语言 524288K 64bit IO Format: %lld 1 题目描述 有一个长度为 n 的序列 a，已知 a[1]=a[n]=1，且对于 2 \u0026lt;= x \u0026lt;= n，a[x] / a[x-1] 是以下三个数字之一 [ 1，-2，0.5 ], 问有多少种不同的序列满足题意。 两个序列不同当且仅当它们有至少一个位置上的数字不","content_html":"时间限制：C/C++ 1 秒，其他语言 2 秒 空间限制：C/C++ 262144K，其他语言 524288K 64bit IO Format: %lld 1 题目描述 有一个长度为 n 的序列 a，已知 a[1]=a[n]=1，且对于 2 \u0026lt;= x \u0026lt;= n，a[x] / a[x-1] 是以下三个数字之一 [ 1，-2，0.5 ], 问有多少种不同的序列满足题意。 两个序列不同当且仅当它们有至少一个位置上的数字不"},{"title":"简单背包","date_published":"2018-06-16T13:18:43Z","date_modified":"2018-06-16T13:18:43Z","id":"https://lruihao.cn/posts/%E7%AE%80%E5%8D%95%E8%83%8C%E5%8C%85/","url":"https://lruihao.cn/posts/%E7%AE%80%E5%8D%95%E8%83%8C%E5%8C%85/","tags":["背包问题","C"],"summary":"弱鸡还是弱鸡啊最简单的背包问题——。——！\n1 问题描述 假设有一个能装入总体积为 T 的背包和 n 件体积分别为 W1，W2，···，Wn 的物品，能否从 n 件物品中挑选若干件恰好装满背包，即使 W1+W2+···+Wn=T，要求找出所有满足上述条件的解。例如：当 T=10，共 6 件物品，物品的体积为{1，2，3，4，5，8}，那么可找到下列 4 组解：（1，2，3，4）、（1，4，5）、（2，3，5）、（2、8）。\n","content_html":"弱鸡还是弱鸡啊最简单的背包问题——。——！\n1 问题描述 假设有一个能装入总体积为 T 的背包和 n 件体积分别为 W1，W2，···，Wn 的物品，能否从 n 件物品中挑选若干件恰好装满背包，即使 W1+W2+···+Wn=T，要求找出所有满足上述条件的解。例如：当 T=10，共 6 件物品，物品的体积为{1，2，3，4，5，8}，那么可找到下列 4 组解：（1，2，3，4）、（1，4，5）、（2，3，5）、（2、8）。\n"},{"title":"18 湘潭邀请赛参赛队员代表发言","date_published":"2018-06-15T07:51:21Z","date_modified":"2018-06-15T07:51:21Z","id":"https://lruihao.cn/posts/18%E6%B9%98%E6%BD%AD%E9%82%80%E8%AF%B7%E8%B5%9B%E9%98%9F%E5%91%98%E4%BB%A3%E8%A1%A8%E5%8F%91%E8%A8%80/","url":"https://lruihao.cn/posts/18%E6%B9%98%E6%BD%AD%E9%82%80%E8%AF%B7%E8%B5%9B%E9%98%9F%E5%91%98%E4%BB%A3%E8%A1%A8%E5%8F%91%E8%A8%80/","tags":["ACM","2018 湘潭邀请赛"],"summary":"来自一位大佬的演讲 尊敬的领导、教练，亲爱的参赛选手们： 大家好，我是来自广东工业大学的 tmk。今天很荣幸能够站在这里代表全体参赛选手发言，与大家分享我的经历和感受。 刚开始来到大学的时候，我一心向学，本着“好好学习，天天向上，为校争光，不搞对象”的信念，想在大学一展宏图。因为高中 OI 的挫败，我在刚上大学的","content_html":"来自一位大佬的演讲 尊敬的领导、教练，亲爱的参赛选手们： 大家好，我是来自广东工业大学的 tmk。今天很荣幸能够站在这里代表全体参赛选手发言，与大家分享我的经历和感受。 刚开始来到大学的时候，我一心向学，本着“好好学习，天天向上，为校争光，不搞对象”的信念，想在大学一展宏图。因为高中 OI 的挫败，我在刚上大学的"},{"title":"F.sorting","date_published":"2018-06-14T22:49:27Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/f-sorting/","url":"https://lruihao.cn/posts/f-sorting/","tags":["2018 湘潭邀请赛","ACM"],"summary":"\n","content_html":"\n"},{"title":"K.2018","date_published":"2018-06-14T22:48:16Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/k-2018/","url":"https://lruihao.cn/posts/k-2018/","tags":["2018 湘潭邀请赛","ACM","C++"],"summary":"1 K. 2018 Given a,b,c,d, ﬁnd out the number of pairs of integers (x,y) where a ≤ x ≤ b,c ≤ y ≤ d and x·y is a multiple of 2018.\n","content_html":"1 K. 2018 Given a,b,c,d, ﬁnd out the number of pairs of integers (x,y) where a ≤ x ≤ b,c ≤ y ≤ d and x·y is a multiple of 2018.\n"},{"title":"B.Higher h-index","date_published":"2018-06-14T22:47:28Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/b-higher/","url":"https://lruihao.cn/posts/b-higher/","tags":["ACM","2018 湘潭邀请赛","C++","C"],"summary":"1 B. Higher h-index The h-index of an author is the largest h where he has at least h papers with citations not less than h.\nBobo has no papers and he is going to publish some subsequently. If he works on a paper for x hours, the\npaper will get (a·x) citations, where a is a known constant. It’s clear that x should be a positive integer.\nThere is also a trick – one can cite his own papers published earlier.\nGiven Bobo has n working hours, ﬁnd the maximum h-index of him.\n","content_html":"1 B. Higher h-index The h-index of an author is the largest h where he has at least h papers with citations not less than h.\nBobo has no papers and he is going to publish some subsequently. If he works on a paper for x hours, the\npaper will get (a·x) citations, where a is a known constant. It’s clear that x should be a positive integer.\nThere is also a trick – one can cite his own papers published earlier.\nGiven Bobo has n working hours, ﬁnd the maximum h-index of him.\n"},{"title":"A.Easy h-index","date_published":"2018-06-14T22:36:58Z","date_modified":"2023-11-17T20:39:48&#43;08:00","id":"https://lruihao.cn/posts/a-easy/","url":"https://lruihao.cn/posts/a-easy/","tags":["2018 湘潭邀请赛","ACM","C++"],"summary":"1 A. Easy h-index The h-index of an author is the largest h where he has at least h papers with citations not less than h.\nBobo has published many papers. Given a0,a1,a2,\u0026hellip;,an which means Bobo has published ai papers with\nitations exactly i, ﬁnd the h-index of Bobo.\n","content_html":"1 A. Easy h-index The h-index of an author is the largest h where he has at least h papers with citations not less than h.\nBobo has published many papers. Given a0,a1,a2,\u0026hellip;,an which means Bobo has published ai papers with\nitations exactly i, ﬁnd the h-index of Bobo.\n"},{"title":"sort 排序","date_published":"2018-06-14T20:23:03Z","date_modified":"2018-06-14T20:23:03Z","id":"https://lruihao.cn/posts/c-sort/","url":"https://lruihao.cn/posts/c-sort/","tags":["C++","sort","STL","ACM"],"summary":"sort 使用#include\u0026lt;algorithm\u0026gt;头文件， sort（开始地址，结束地址，排序方式），其中第三参数可以没有，则默认为升序排序。 或者简单的用 less\u0026lt;参数类型\u0026gt;()表示升序 greater\u0026lt;参数类型\u0026gt;()表示降序 也可以用一个 bool 型函数，比如： 1 2 3 4 5 bool cmp(int a,int b){ return","content_html":"sort 使用#include\u0026lt;algorithm\u0026gt;头文件， sort（开始地址，结束地址，排序方式），其中第三参数可以没有，则默认为升序排序。 或者简单的用 less\u0026lt;参数类型\u0026gt;()表示升序 greater\u0026lt;参数类型\u0026gt;()表示降序 也可以用一个 bool 型函数，比如： 1 2 3 4 5 bool cmp(int a,int b){ return"},{"title":"C++ with STL","date_published":"2018-06-14T20:22:06Z","date_modified":"2023-11-30T23:35:38&#43;08:00","id":"https://lruihao.cn/posts/c-with-stl/","url":"https://lruihao.cn/posts/c-with-stl/","tags":["ACM","STL","C++"],"summary":"1 1.swap（交换两元素值，在 algorithm 下，用法：swap(a,b);） 交换两元素的值在 C 语言课上作为指针讲解的典例。 int a=1,b=2; swap(a,b); //此时 a=2,b=1 （可以是其他类型） 2 2.sort(,,) sort 排序是不稳定的，stl 中的 stable_sort 才是稳定的 1 2 3 4 5 6 7 inta[10]={1,6,2,3,5,4,3,8,9,7}; stable_sort(a,a+10,greater\u0026lt;int\u0026gt;()); for(int i=0;i\u0026lt;10;i++) cout\u0026lt;\u0026lt;a[i]\u0026lt;\u0026lt;\u0026#34; \u0026#34;; 3 3.reverse（翻转序列，在 algorithm 下） //常用在字符串上 int a[5]={1,2,3,4,5}; reverse(a,a+5); //序列现在是 5 4 3","content_html":"1 1.swap（交换两元素值，在 algorithm 下，用法：swap(a,b);） 交换两元素的值在 C 语言课上作为指针讲解的典例。 int a=1,b=2; swap(a,b); //此时 a=2,b=1 （可以是其他类型） 2 2.sort(,,) sort 排序是不稳定的，stl 中的 stable_sort 才是稳定的 1 2 3 4 5 6 7 inta[10]={1,6,2,3,5,4,3,8,9,7}; stable_sort(a,a+10,greater\u0026lt;int\u0026gt;()); for(int i=0;i\u0026lt;10;i++) cout\u0026lt;\u0026lt;a[i]\u0026lt;\u0026lt;\u0026#34; \u0026#34;; 3 3.reverse（翻转序列，在 algorithm 下） //常用在字符串上 int a[5]={1,2,3,4,5}; reverse(a,a+5); //序列现在是 5 4 3"}]}